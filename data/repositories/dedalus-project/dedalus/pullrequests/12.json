{"rendered": {"reason": {"raw": "Accidentally logged in as Jeff...", "markup": "markdown", "html": "<p>Accidentally logged in as Jeff...</p>", "type": "rendered"}, "description": {"raw": "This pull request includes three distinct changes:\r\n\r\nEigenvalue solver:\r\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -> -i omega.  This should be cleaned up to probably substitute dt -> gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.\r\n\r\nAntidifferentiate methods:\r\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.\r\n\r\nMid-domain BC:\r\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.\r\n\r\nBug fix:\r\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.", "markup": "markdown", "html": "<p>This pull request includes three distinct changes:</p>\n<p>Eigenvalue solver:\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -&gt; -i omega.  This should be cleaned up to probably substitute dt -&gt; gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.</p>\n<p>Antidifferentiate methods:\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.</p>\n<p>Mid-domain BC:\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.</p>\n<p>Bug fix:\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.</p>", "type": "rendered"}, "title": {"raw": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC", "markup": "markdown", "html": "<p>WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request includes three distinct changes:\r\n\r\nEigenvalue solver:\r\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -> -i omega.  This should be cleaned up to probably substitute dt -> gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.\r\n\r\nAntidifferentiate methods:\r\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.\r\n\r\nMid-domain BC:\r\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.\r\n\r\nBug fix:\r\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/diffstat/lecoanet/dedalus2-lecoanet-old:b9e8dc996761%0D7637df83c8e5?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12.json"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/pullrequests/12/merge"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12"}, "activity": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/diff/lecoanet/dedalus2-lecoanet-old:b9e8dc996761%0D7637df83c8e5?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12/statuses_page=1.json"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC", "close_source_branch": false, "reviewers": [{"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}], "id": 12, "destination": {"commit": {"hash": "7637df83c8e5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/7637df83c8e5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/7637df83c8e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "created_on": "2014-05-30T18:43:52.850204+00:00", "summary": {"raw": "This pull request includes three distinct changes:\r\n\r\nEigenvalue solver:\r\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -> -i omega.  This should be cleaned up to probably substitute dt -> gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.\r\n\r\nAntidifferentiate methods:\r\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.\r\n\r\nMid-domain BC:\r\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.\r\n\r\nBug fix:\r\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.", "markup": "markdown", "html": "<p>This pull request includes three distinct changes:</p>\n<p>Eigenvalue solver:\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -&gt; -i omega.  This should be cleaned up to probably substitute dt -&gt; gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.</p>\n<p>Antidifferentiate methods:\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.</p>\n<p>Mid-domain BC:\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.</p>\n<p>Bug fix:\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b9e8dc996761", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old/commit/b9e8dc996761"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old/commits/b9e8dc996761"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old"}, "avatar": {"href": "data/bytebucket.org/ravatar/{97b351f4-3a92-42a4-985a-146e7cfb9d40}ts=python"}}, "type": "repository", "name": "dedalus2-lecoanet-old", "full_name": "lecoanet/dedalus2-lecoanet-old", "uuid": "{97b351f4-3a92-42a4-985a-146e7cfb9d40}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}}, {"role": "PARTICIPANT", "participated_on": "2014-05-30T18:45:33.146857+00:00", "type": "participant", "approved": false, "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}}], "reason": "Accidentally logged in as Jeff...", "updated_on": "2014-05-30T19:03:18.153755+00:00", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "merge_commit": null, "closed_by": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}}