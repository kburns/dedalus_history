{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/13/comments/2025181.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/13/_/diff#comment-2025181"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/13.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/13"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC"}, "content": {"raw": "I agree that the current full LinearBVP isn't ideal (pencil construction can take a long time on large problems), but I really think there's a better way to approach this than repeating the recurrence relationship.  I'll work on a quick implementation of a tighter loop of solves that avoids the current Problem/Pencil overhead, which I think might still be able to include more general boundary conditions.", "markup": "markdown", "html": "<p>I agree that the current full LinearBVP isn't ideal (pencil construction can take a long time on large problems), but I really think there's a better way to approach this than repeating the recurrence relationship.  I'll work on a quick implementation of a tighter loop of solves that avoids the current Problem/Pencil overhead, which I think might still be able to include more general boundary conditions.</p>", "type": "rendered"}, "created_on": "2014-06-02T14:53:15.167996+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2014-06-02T14:53:15.180136+00:00", "type": "pullrequest_comment", "id": 2025181}