{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29802732.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29802732"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "Hi all.  Taking another look at this, it seems like the essential functionality is in the find_output_counts function, which gets the final set and count numbers for any analysis subdirectories.  These get handed back to the user, who then uses them to initialize the corresponding output handlers for the restarted runs.  Is that right?  \n\nIf so, it seems like this could be more simply accomplished by adding a keyword option to the file handler initialization that allows you to specify that the handler should say \"append\" to any current outputs or \"overwrite\" them etc.  This would eliminate the need to exclude other subdirectories, since each handler would just individually check if there's previous output in its own target directory.  It would also eliminate the need for the user to manually grab and then re-pass the set and count numbers, which could become a pain to handle manually (i.e. consider the example problem, but with a dozen different analysis handlers).  Any thoughts?", "markup": "markdown", "html": "<p>Hi all.  Taking another look at this, it seems like the essential functionality is in the find_output_counts function, which gets the final set and count numbers for any analysis subdirectories.  These get handed back to the user, who then uses them to initialize the corresponding output handlers for the restarted runs.  Is that right?  </p>\n<p>If so, it seems like this could be more simply accomplished by adding a keyword option to the file handler initialization that allows you to specify that the handler should say \"append\" to any current outputs or \"overwrite\" them etc.  This would eliminate the need to exclude other subdirectories, since each handler would just individually check if there's previous output in its own target directory.  It would also eliminate the need for the user to manually grab and then re-pass the set and count numbers, which could become a pain to handle manually (i.e. consider the example problem, but with a dozen different analysis handlers).  Any thoughts?</p>", "type": "rendered"}, "created_on": "2017-01-16T21:36:31.497780+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2017-01-16T21:36:31.499777+00:00", "type": "pullrequest_comment", "id": 29802732}