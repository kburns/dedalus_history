{"pagelen": 50, "values": [{"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "MERGED", "source": {"commit": {"hash": "90d8b271bb66", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/90d8b271bb66"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/90d8b271bb66"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-05T00:16:56.666275+00:00", "changes": {"status": {"new": "fulfilled", "old": "open"}}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"approval": {"date": "2017-05-05T00:16:44.858224+00:00", "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "90d8b271bb66", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/90d8b271bb66"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/90d8b271bb66"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-04T19:57:30.229728+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "7c4feabdb7dd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/7c4feabdb7dd"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/7c4feabdb7dd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-04T19:32:24.067756+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "7c4feabdb7dd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/7c4feabdb7dd"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/7c4feabdb7dd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-04T19:32:24.017667+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-04T19:31:46.142011+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-04T19:25:46.874777+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-04T19:23:18.390881+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "d7512313f139", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d7512313f139.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d7512313f139"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-05-04T15:11:22.230834+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "2ed99536b44e", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/2ed99536b44e.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/2ed99536b44e"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-05-04T15:08:17.251332+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "cb897a2650fe", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/cb897a2650fe.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/cb897a2650fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-05-02T19:49:19.290756+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "10bcb0f1485c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/10bcb0f1485c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/10bcb0f1485c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-04-26T19:24:07.041274+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "66dc698941b7", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/66dc698941b7.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/66dc698941b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-04-13T14:03:14.520448+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "38a10a098196", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/38a10a098196.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/38a10a098196"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-04-13T13:41:08.870460+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "6b6f0b45c5b7", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/6b6f0b45c5b7.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/6b6f0b45c5b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-03-22T01:36:44.172003+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "6b6f0b45c5b7", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/6b6f0b45c5b7.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/6b6f0b45c5b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-03-06T15:36:49.587793+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "f64e49880d52", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f64e49880d52.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f64e49880d52"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-02-24T15:29:48.855993+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "18314df98eb0", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/18314df98eb0.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/18314df98eb0"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-02-08T21:39:32.782417+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "18314df98eb0", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/18314df98eb0.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/18314df98eb0"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-02-07T22:33:10.833001+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "18314df98eb0", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/18314df98eb0.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/18314df98eb0"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-02-03T14:46:02.831047+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "ff029a57b775", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ff029a57b775.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ff029a57b775"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-02-01T14:53:24.736895+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "48ddc5d67648", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/48ddc5d67648.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/48ddc5d67648"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-01-31T00:37:10.673804+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "de7c0146ebc1", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/de7c0146ebc1.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/de7c0146ebc1"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-01-27T04:27:44.910906+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "de7c0146ebc1", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/de7c0146ebc1.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/de7c0146ebc1"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-26T21:08:21.272132+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "de7c0146ebc1", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/de7c0146ebc1.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/de7c0146ebc1"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-26T21:04:52.037325+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "de7c0146ebc1", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/de7c0146ebc1.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/de7c0146ebc1"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-26T20:51:50.278251+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "de7c0146ebc1", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/de7c0146ebc1.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/de7c0146ebc1"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-26T20:19:52.527604+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "9da9c2c6c867", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/9da9c2c6c867.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/9da9c2c6c867"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-26T13:47:03.674381+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29803446.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29803446"}}, "parent": {"id": 29803254, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29803254.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29803254"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "This would also give flexiblity for a few other types of things too -- in general, there may be analysis outputs that occured after the last checkpoint in the original simulation (if the analysis cadence is shorter than the checkpoint cadence), so you may want to either overwrite those outputs with new data from the restart.  Or you might want to hang on to them and really append to the last output of every handler, which is what it looks like the checkpoint code currently does, but will result in some overlapping outputs from the old and new simulations. ", "markup": "markdown", "html": "<p>This would also give flexiblity for a few other types of things too -- in general, there may be analysis outputs that occured after the last checkpoint in the original simulation (if the analysis cadence is shorter than the checkpoint cadence), so you may want to either overwrite those outputs with new data from the restart.  Or you might want to hang on to them and really append to the last output of every handler, which is what it looks like the checkpoint code currently does, but will result in some overlapping outputs from the old and new simulations. </p>", "type": "rendered"}, "created_on": "2017-01-16T21:55:07.020156+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2017-01-16T21:55:07.022743+00:00", "type": "pullrequest_comment", "id": 29803446}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29803254.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29803254"}}, "parent": {"id": 29802835, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29802835.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29802835"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "The append solution seems like a nice and clean one.", "markup": "markdown", "html": "<p>The append solution seems like a nice and clean one.</p>", "type": "rendered"}, "created_on": "2017-01-16T21:50:08.405496+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2017-01-16T21:50:08.435516+00:00", "type": "pullrequest_comment", "id": 29803254}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29802835.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29802835"}}, "parent": {"id": 29802732, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29802732.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29802732"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "And to clarify, setting the handler to \"append\" would basically just have it internally do what the Checkpoint class is doing: look for any current output, and use the last set/count number to initialize the output on the restarted run, or similar.", "markup": "markdown", "html": "<p>And to clarify, setting the handler to \"append\" would basically just have it internally do what the Checkpoint class is doing: look for any current output, and use the last set/count number to initialize the output on the restarted run, or similar.</p>", "type": "rendered"}, "created_on": "2017-01-16T21:38:52.100134+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2017-01-16T21:38:52.102412+00:00", "type": "pullrequest_comment", "id": 29802835}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/29802732.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-29802732"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "Hi all.  Taking another look at this, it seems like the essential functionality is in the find_output_counts function, which gets the final set and count numbers for any analysis subdirectories.  These get handed back to the user, who then uses them to initialize the corresponding output handlers for the restarted runs.  Is that right?  \n\nIf so, it seems like this could be more simply accomplished by adding a keyword option to the file handler initialization that allows you to specify that the handler should say \"append\" to any current outputs or \"overwrite\" them etc.  This would eliminate the need to exclude other subdirectories, since each handler would just individually check if there's previous output in its own target directory.  It would also eliminate the need for the user to manually grab and then re-pass the set and count numbers, which could become a pain to handle manually (i.e. consider the example problem, but with a dozen different analysis handlers).  Any thoughts?", "markup": "markdown", "html": "<p>Hi all.  Taking another look at this, it seems like the essential functionality is in the find_output_counts function, which gets the final set and count numbers for any analysis subdirectories.  These get handed back to the user, who then uses them to initialize the corresponding output handlers for the restarted runs.  Is that right?  </p>\n<p>If so, it seems like this could be more simply accomplished by adding a keyword option to the file handler initialization that allows you to specify that the handler should say \"append\" to any current outputs or \"overwrite\" them etc.  This would eliminate the need to exclude other subdirectories, since each handler would just individually check if there's previous output in its own target directory.  It would also eliminate the need for the user to manually grab and then re-pass the set and count numbers, which could become a pain to handle manually (i.e. consider the example problem, but with a dozen different analysis handlers).  Any thoughts?</p>", "type": "rendered"}, "created_on": "2017-01-16T21:36:31.497780+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2017-01-16T21:36:31.499777+00:00", "type": "pullrequest_comment", "id": 29802732}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "ce7544456198", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ce7544456198.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ce7544456198"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-16T20:17:28.150201+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "ce7544456198", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ce7544456198.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ce7544456198"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-16T20:16:51.846804+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "ce7544456198", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ce7544456198.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ce7544456198"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2017-01-16T20:16:18.274693+00:00", "changes": {"description": {"new": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.", "old": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n"}}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "ce7544456198", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ce7544456198.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ce7544456198"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2017-01-09T14:41:39.455820+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "0b86e67f4ad2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/0b86e67f4ad2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/0b86e67f4ad2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-12-27T16:04:53.831261+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "0b86e67f4ad2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/0b86e67f4ad2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/0b86e67f4ad2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-12-27T16:03:30.976005+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "0b86e67f4ad2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/0b86e67f4ad2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/0b86e67f4ad2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-12-27T16:02:30.092154+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "0b86e67f4ad2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/0b86e67f4ad2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/0b86e67f4ad2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "bb8adc5c9073", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/bb8adc5c9073"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/bb8adc5c9073"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-12-27T16:00:05.401449+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/28804243.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-28804243"}}, "parent": {"id": 14179674, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/14179674.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-14179674"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "bump on getting this resolved and merged?", "markup": "markdown", "html": "<p>bump on getting this resolved and merged?</p>", "type": "rendered"}, "created_on": "2016-12-23T07:23:06.757702+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2016-12-23T07:23:06.759810+00:00", "type": "pullrequest_comment", "id": 28804243}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "0b86e67f4ad2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/0b86e67f4ad2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/0b86e67f4ad2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "930e4bc1f8c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/930e4bc1f8c5"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/930e4bc1f8c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-09-21T18:41:42.657883+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "57dd86e3395f", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/57dd86e3395f.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/57dd86e3395f"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "930e4bc1f8c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/930e4bc1f8c5"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/930e4bc1f8c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-09-12T20:53:28.763869+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "e08364d5271c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/e08364d5271c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/e08364d5271c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "930e4bc1f8c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/930e4bc1f8c5"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/930e4bc1f8c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2016-08-15T22:36:54.719869+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "4324b0f77f51", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/4324b0f77f51.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/4324b0f77f51"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "930e4bc1f8c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/930e4bc1f8c5"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/930e4bc1f8c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-07-21T22:15:50.861624+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/21169215.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-21169215"}}, "parent": {"id": 21044453, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/21044453.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-21044453"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "Sounds great.  Thanks for all your work on this Jeff.", "markup": "markdown", "html": "<p>Sounds great.  Thanks for all your work on this Jeff.</p>", "type": "rendered"}, "created_on": "2016-07-19T05:42:05.778487+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2016-07-19T05:42:05.783602+00:00", "type": "pullrequest_comment", "id": 21169215}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/21044592.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-21044592"}}, "parent": {"id": 21044453, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/21044453.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-21044453"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "The new update works!  Things checkpoint smoothly and don't crash when there are other directories around.  Thanks for the fix.   No worries about merging until you're home.", "markup": "markdown", "html": "<p>The new update works!  Things checkpoint smoothly and don't crash when there are other directories around.  Thanks for the fix.   No worries about merging until you're home.</p>", "type": "rendered"}, "created_on": "2016-07-14T21:37:13.697036+00:00", "user": {"display_name": "Evan Anders", "uuid": "{ce45a673-fcc9-48fc-a547-f4ee9f3a8020}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D"}, "html": {"href": "https://bitbucket.org/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:320d4568-38ec-40ab-9264-ac9b3760572a/7e7ec364-57a7-4b6a-809c-b17a66066163/128"}}, "nickname": "evanhanders", "type": "user", "account_id": "557058:320d4568-38ec-40ab-9264-ac9b3760572a"}, "updated_on": "2016-07-14T21:37:13.740130+00:00", "type": "pullrequest_comment", "id": 21044592}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"approval": {"date": "2016-07-14T21:33:38.532768+00:00", "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "user": {"display_name": "Evan Anders", "uuid": "{ce45a673-fcc9-48fc-a547-f4ee9f3a8020}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D"}, "html": {"href": "https://bitbucket.org/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:320d4568-38ec-40ab-9264-ac9b3760572a/7e7ec364-57a7-4b6a-809c-b17a66066163/128"}}, "nickname": "evanhanders", "type": "user", "account_id": "557058:320d4568-38ec-40ab-9264-ac9b3760572a"}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/21044453.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-21044453"}}, "parent": {"id": 20619768, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35/comments/20619768.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35/_/diff#comment-20619768"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}, "content": {"raw": "Hi Evan,\n\nI pushed the fix. Please let me know if it works. Additionally, in order to address the commit messes earlier in this PR, I'm probably going to have to rewrite history here, which will propagate back in if you or Ben or any of the other users of this feature don't also excise with me. Thus, I'm not going to merge this PR now, but I'll do it when I return to NYC next week and have time to carefully do all of this.", "markup": "markdown", "html": "<p>Hi Evan,</p>\n<p>I pushed the fix. Please let me know if it works. Additionally, in order to address the commit messes earlier in this PR, I'm probably going to have to rewrite history here, which will propagate back in if you or Ben or any of the other users of this feature don't also excise with me. Thus, I'm not going to merge this PR now, but I'll do it when I return to NYC next week and have time to carefully do all of this.</p>", "type": "rendered"}, "created_on": "2016-07-14T21:33:31.790016+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2016-07-14T21:33:31.793655+00:00", "type": "pullrequest_comment", "id": 21044453}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}, {"update": {"description": "Introduce a very simple API for checkpointing, based on Ben's original ideas. A `Checkpoint` object creates a simple `FileHandler` called checkpoint that writes the state to a separate file each time it is evaluated. An example script, `examples/ivp/busse_annulus/busse.py`, shows how to use this. There is a simple helper function that allows you to pick up all of your other analysis files where they left off.\r\n\r\nKnown Issues\r\n--------------------\r\n* if the restart is from a previous time, analysis files will have two copies of all repeated timesteps. This does not present any particular challenge to the user, but it could be cleaned up in the future.\r\n", "title": "Simple Checkpointing mechanism", "reviewers": [], "destination": {"commit": {"hash": "a1fb41ab442d", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/a1fb41ab442d.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/a1fb41ab442d"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "930e4bc1f8c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev/commit/930e4bc1f8c5"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev/commits/930e4bc1f8c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jsoishi/dedalus-dev"}, "html": {"href": "https://bitbucket.org/jsoishi/dedalus-dev"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c07bc1c8-e146-4743-a1ab-8867ee6eb886}ts=python"}}, "type": "repository", "name": "dedalus-dev", "full_name": "jsoishi/dedalus-dev", "uuid": "{c07bc1c8-e146-4743-a1ab-8867ee6eb886}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-07-14T21:31:11.442319+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/35.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/35"}}, "title": "Simple Checkpointing mechanism"}}], "next": "data/repositories/dedalus-project/dedalus/pullrequests/35/activity_ctx=4qdubCjtb.json"}