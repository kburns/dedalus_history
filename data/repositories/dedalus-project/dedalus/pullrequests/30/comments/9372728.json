{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372728.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372728"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton,\n      That sounds good.  I'm excited about the auto-detection and handling of resolution changes.  \n\nDoes that work for compound basis as well?  If so, does it assume that the break point between the compound bases is at the same location, and only the number of modes changes?\n\n\n #3 is intricate, but I think it's also crucial.  I have an idea about how to do that, but need to think it through a bit further.  Maybe we could talk it through later this week (Friday?).  First week of classes at CU, and first week back at work, so Friday is probably the first day I'll be able to think clearly about anything.\n\nExcited to see the load_state implementation.", "markup": "markdown", "html": "<p>Keaton,\n      That sounds good.  I'm excited about the auto-detection and handling of resolution changes.  </p>\n<p>Does that work for compound basis as well?  If so, does it assume that the break point between the compound bases is at the same location, and only the number of modes changes?</p>\n<p><a href=\"#!/dedalus-project/dedalus/issues/3/hack-sparse-structure-for-system\" rel=\"nofollow\" title=\"hack sparse structure for system\" class=\"ap-connect-link\"><s>#3</s></a> is intricate, but I think it's also crucial.  I have an idea about how to do that, but need to think it through a bit further.  Maybe we could talk it through later this week (Friday?).  First week of classes at CU, and first week back at work, so Friday is probably the first day I'll be able to think clearly about anything.</p>\n<p>Excited to see the load_state implementation.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:40:42.929156+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-08-25T20:40:42.937676+00:00", "type": "pullrequest_comment", "id": 9372728}