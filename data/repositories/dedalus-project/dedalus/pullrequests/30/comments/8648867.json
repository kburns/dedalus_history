{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8648867.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8648867"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "1) This is somewhat a matter of taste, but I think that commits ending up in the main repo should ideally be concise descriptions of additions or fixes to the code, and less of a work-log documenting the entire approach to a working feature, since for everyone this is often ridden with false-starts and minor errors that just don't end up being very useful to others.  Squashing things down to a few commits detailing the major changes (e.g. maybe one for the full implementation, another for updating the examples, etc) makes things a lot easier for others to understand when looking back at the main repo log.  As it stands, there are many non or partially functional commits in the dedalus history (primarily my fault), but I think it's better-late-than-never for trying to improve this situation.  It also looks to be pretty much standard practice in e.g. scipy development.\n\n2) Yeah I was specifically referring to the modularization.  I guess I prefer setting up basic run parameters (including physical parameters, but also possibly a restart flag/file) explicitly at the top of the file rather than through the command line, just so they're directly documented in the script rather than having to be repeated in the output.  I think this approach could still work with just one script, since you already have to add the case statements on setting up the IC's vs pulling data from a checkpoint, by checking the restart keyword that's passed to the setup function.\n", "markup": "markdown", "html": "<p>1) This is somewhat a matter of taste, but I think that commits ending up in the main repo should ideally be concise descriptions of additions or fixes to the code, and less of a work-log documenting the entire approach to a working feature, since for everyone this is often ridden with false-starts and minor errors that just don't end up being very useful to others.  Squashing things down to a few commits detailing the major changes (e.g. maybe one for the full implementation, another for updating the examples, etc) makes things a lot easier for others to understand when looking back at the main repo log.  As it stands, there are many non or partially functional commits in the dedalus history (primarily my fault), but I think it's better-late-than-never for trying to improve this situation.  It also looks to be pretty much standard practice in e.g. scipy development.</p>\n<p>2) Yeah I was specifically referring to the modularization.  I guess I prefer setting up basic run parameters (including physical parameters, but also possibly a restart flag/file) explicitly at the top of the file rather than through the command line, just so they're directly documented in the script rather than having to be repeated in the output.  I think this approach could still work with just one script, since you already have to add the case statements on setting up the IC's vs pulling data from a checkpoint, by checking the restart keyword that's passed to the setup function.</p>", "type": "rendered"}, "created_on": "2015-07-30T04:26:26.899907+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-07-30T04:26:26.907803+00:00", "type": "pullrequest_comment", "id": 8648867}