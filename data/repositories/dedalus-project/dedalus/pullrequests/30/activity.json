{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/20526864.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-20526864"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Declining this PR in favor of better implementation by @jsoishi in pull request #35 (simple checkpointing mechanism).", "markup": "markdown", "html": "<p>Declining this PR in favor of better implementation by @jsoishi in <a href=\"#!/dedalus-project/dedalus/pull-requests/35/simple-checkpointing-mechanism\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #35</a> (simple checkpointing mechanism).</p>", "type": "rendered"}, "created_on": "2016-07-01T22:02:50.088403+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2016-07-01T22:02:50.095041+00:00", "type": "pullrequest_comment", "id": 20526864}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "5f7fcdf21cd2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/5f7fcdf21cd2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/5f7fcdf21cd2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "DECLINED", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "Declining in favor of better implementation by @jsoishi (PR #35).", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2016-07-01T22:00:27.559368+00:00", "changes": {"status": {"new": "rejected", "old": "open"}}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "5f7fcdf21cd2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/5f7fcdf21cd2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/5f7fcdf21cd2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-05-10T03:07:45.196822+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "ed5938b03ae5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ed5938b03ae5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ed5938b03ae5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-05-09T19:09:45.028018+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "57297578537e", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/57297578537e.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/57297578537e"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-05-08T14:30:49.215965+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "92683d9d25f4", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/92683d9d25f4.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/92683d9d25f4"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-05-04T21:39:33.710532+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "696e6a410e48", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/696e6a410e48.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/696e6a410e48"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-05-03T19:24:16.980184+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "2dbff3091411", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/2dbff3091411.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/2dbff3091411"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2016-04-14T05:29:21.534967+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "36a62e23dd3c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/36a62e23dd3c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/36a62e23dd3c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2016-04-14T05:20:01.326338+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "5278f1abfe16", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/5278f1abfe16.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/5278f1abfe16"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-02-12T19:20:04.028252+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "2091e01bca41", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/2091e01bca41.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/2091e01bca41"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2016-02-10T23:35:54.746599+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "1e72bdf0c3a8", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/1e72bdf0c3a8.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/1e72bdf0c3a8"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-02-09T16:21:30.153847+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "c169c5164a1c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/c169c5164a1c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/c169c5164a1c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-02-05T20:43:16.081337+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "e6095c904564", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/e6095c904564.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/e6095c904564"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-01-31T15:56:33.360783+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "d3115289c588", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d3115289c588.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d3115289c588"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2016-01-13T19:28:21.881840+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "c549dea018ba", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/c549dea018ba.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/c549dea018ba"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-12-19T15:57:22.659101+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "4427bcb48e21", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/4427bcb48e21.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/4427bcb48e21"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-12-18T19:15:35.026973+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "dc356a856fcd", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/dc356a856fcd.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/dc356a856fcd"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-12-11T01:57:10.624532+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "98ad3fb1930c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/98ad3fb1930c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/98ad3fb1930c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-12-09T23:29:25.543228+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "5eca790b34a3", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/5eca790b34a3.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/5eca790b34a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-11-06T22:04:20.948444+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "e895671ca134", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/e895671ca134.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/e895671ca134"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-11-06T22:02:13.386085+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "92887e6edce9", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/92887e6edce9.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/92887e6edce9"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-11-06T21:40:22.495867+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "ca092bb6f340", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ca092bb6f340.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ca092bb6f340"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-11-06T17:46:34.590061+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "c76460e87a4f", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/c76460e87a4f.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/c76460e87a4f"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-11-06T17:12:33.620780+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "ec17cc534463", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ec17cc534463.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ec17cc534463"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2015-10-25T01:43:20.476251+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "bc2ddd5790cc", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/bc2ddd5790cc.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/bc2ddd5790cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2015-10-24T23:14:13.802998+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "93e03c4665b4", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/93e03c4665b4.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/93e03c4665b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2015-10-02T19:33:23.413717+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "c94184eb8f94", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/c94184eb8f94.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/c94184eb8f94"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-09-30T11:55:55.559557+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "ac6a7e31f4ce", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ac6a7e31f4ce.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ac6a7e31f4ce"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-09-28T17:47:26.361255+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "f6bc7b45c4b5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f6bc7b45c4b5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f6bc7b45c4b5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-09-28T17:37:16.500447+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "82dc892f2249", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/82dc892f2249.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/82dc892f2249"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-09-28T14:55:26.756389+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "f8dbad723dac", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f8dbad723dac.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f8dbad723dac"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-09-09T15:35:40.208257+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9666832.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9666832"}}, "parent": {"id": 9379294, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379294.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379294"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Good idea -- it doesn't prevent you from clobbering data but it's make it pretty easy to avoid doing so.  I've added this to my branch with the load_state function, and issued a separate PR.", "markup": "markdown", "html": "<p>Good idea -- it doesn't prevent you from clobbering data but it's make it pretty easy to avoid doing so.  I've added this to my branch with the load_state function, and issued a separate PR.</p>", "type": "rendered"}, "created_on": "2015-09-04T17:03:53.936767+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-09-04T17:03:53.944425+00:00", "type": "pullrequest_comment", "id": 9666832}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "150221b94a6a", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/150221b94a6a.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/150221b94a6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-08-26T15:40:58.199886+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9397929.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9397929"}}, "parent": {"id": 9379288, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379288.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379288"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Happy to talk about it sometime.  Best place to start reading is just the hg docs:\n\nhttps://mercurial.selenic.com/wiki/Phases\n\nhttps://mercurial.selenic.com/wiki/RebaseExtension", "markup": "markdown", "html": "<p>Happy to talk about it sometime.  Best place to start reading is just the hg docs:</p>\n<p><a href=\"https://mercurial.selenic.com/wiki/Phases\" rel=\"nofollow\" class=\"ap-connect-link\">https://mercurial.selenic.com/wiki/Phases</a></p>\n<p><a href=\"https://mercurial.selenic.com/wiki/RebaseExtension\" rel=\"nofollow\" class=\"ap-connect-link\">https://mercurial.selenic.com/wiki/RebaseExtension</a></p>", "type": "rendered"}, "created_on": "2015-08-26T14:10:03.174873+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-26T14:10:03.255744+00:00", "type": "pullrequest_comment", "id": 9397929}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379294.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379294"}}, "parent": {"id": 9378657, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9378657.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9378657"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Here's a description of what I was envisioning.  By default, all output will start write data with write number of 1, set number of 1.  However, we can include a function that looks at an output directory, and tries to find the last set number and write number before a given time.  If a user wants, they could use this to find the last set number and write number before their checkpoint, and then start output with write/set numbers 1 larger than each of these.  This wouldn't involving adding new data to any existing output file -- it only helps organize the files you're outputting to.  This would make stitching together the output of multiple runs easier, but shouldn't cause any problems if tasks change.", "markup": "markdown", "html": "<p>Here's a description of what I was envisioning.  By default, all output will start write data with write number of 1, set number of 1.  However, we can include a function that looks at an output directory, and tries to find the last set number and write number before a given time.  If a user wants, they could use this to find the last set number and write number before their checkpoint, and then start output with write/set numbers 1 larger than each of these.  This wouldn't involving adding new data to any existing output file -- it only helps organize the files you're outputting to.  This would make stitching together the output of multiple runs easier, but shouldn't cause any problems if tasks change.</p>", "type": "rendered"}, "created_on": "2015-08-26T03:16:27.016395+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-08-26T03:16:27.022429+00:00", "type": "pullrequest_comment", "id": 9379294}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379288.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379288"}}, "parent": {"id": 9376067, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376067.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376067"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton,\n     Could you at some point send me a walkthrough of how to do that, so I\ncan do that for the checkpointing PR?\n\n--Ben", "markup": "markdown", "html": "<p>Keaton,\n     Could you at some point send me a walkthrough of how to do that, so I\ncan do that for the checkpointing PR?</p>\n<p>--Ben</p>", "type": "rendered"}, "created_on": "2015-08-26T03:15:37.724455+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-08-26T03:15:37.756007+00:00", "type": "pullrequest_comment", "id": 9379288}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9378657.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9378657"}}, "parent": {"id": 9373601, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9373601.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9373601"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Yeah, we can definitely add in keyword options to set the first write / set numbers.  I think trying to pick up from the old files is where things get tricky, since it's not clear how to do that if the tasks change, etc.  Also an advantage of just starting new output is that you avoid the possibility of clobbering existing data, and then you can just stitch together the output from multiple runs in post-processing. \n\nI've also been thinking of a change to the cadence system to specify start/end times for performing analysis, instead of just steady cadences, which could have lots of uses and address your question about analysis of the first iteration of a restart.", "markup": "markdown", "html": "<p>Yeah, we can definitely add in keyword options to set the first write / set numbers.  I think trying to pick up from the old files is where things get tricky, since it's not clear how to do that if the tasks change, etc.  Also an advantage of just starting new output is that you avoid the possibility of clobbering existing data, and then you can just stitch together the output from multiple runs in post-processing. </p>\n<p>I've also been thinking of a change to the cadence system to specify start/end times for performing analysis, instead of just steady cadences, which could have lots of uses and address your question about analysis of the first iteration of a restart.</p>", "type": "rendered"}, "created_on": "2015-08-26T02:17:02.476275+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-26T02:17:02.481075+00:00", "type": "pullrequest_comment", "id": 9378657}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376172.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376172"}}, "parent": {"id": 9372728, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372728.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372728"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "It should work with compound bases, but yes assumes that the subintervals are the same, and that all the subresolutions have changed commensurately.  Basically it's loading old data of arbitrary shape by viewing it as a scaled version of the new shape, and all of the basis in a compound bases get scaled together.\n\nHappy to talk any time this week.  I've pushed the load_state method to the 'checkpoint' bookmark of my fork.", "markup": "markdown", "html": "<p>It should work with compound bases, but yes assumes that the subintervals are the same, and that all the subresolutions have changed commensurately.  Basically it's loading old data of arbitrary shape by viewing it as a scaled version of the new shape, and all of the basis in a compound bases get scaled together.</p>\n<p>Happy to talk any time this week.  I've pushed the load_state method to the 'checkpoint' bookmark of my fork.</p>", "type": "rendered"}, "created_on": "2015-08-25T23:08:56.311849+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-25T23:08:56.319726+00:00", "type": "pullrequest_comment", "id": 9376172}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376129.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376129"}}, "parent": {"id": 9372981, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372981.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372981"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Implemented in the 'checkpoint' bookmark of my fork.  I'll try to add an example soon.", "markup": "markdown", "html": "<p>Implemented in the 'checkpoint' bookmark of my fork.  I'll try to add an example soon.</p>", "type": "rendered"}, "created_on": "2015-08-25T23:05:09.721471+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-25T23:05:09.728656+00:00", "type": "pullrequest_comment", "id": 9376129}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376067.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376067"}}, "parent": {"id": 9372955, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372955.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372955"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Yep, I've set my fork to be a non-published repository so that I can still push/backup draft-phase changes.  Then I can just rebase/collapse, and if necessary strip old versions from the repo, when I want to issue or update a PR.", "markup": "markdown", "html": "<p>Yep, I've set my fork to be a non-published repository so that I can still push/backup draft-phase changes.  Then I can just rebase/collapse, and if necessary strip old versions from the repo, when I want to issue or update a PR.</p>", "type": "rendered"}, "created_on": "2015-08-25T23:01:32.083838+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-25T23:02:18.391511+00:00", "type": "pullrequest_comment", "id": 9376067}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9373601.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9373601"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Hey Ben & Keaton,\n\nI think it would be useful if, when creating a file handler, you could specify the write_num to start on, and which file number to start writing (i.e., output_s5_p0.h5 rather than output_s1_p0.h5).  Also, right now, it seems like the default is to do all output at the beginning of each simulation -- it would be nice (for the purposes of restarting) if there was some way to turn this off.\n\nI agree that it seems impossible to come up with a way to always calculate the appropriate write_num and file number to start on.  However, we could include some function to calculate these for \"normal\" use cases (i.e., look at the previous outputs and find the latest time before the restart).  If the user is doing something more complicated, then they can pick whichever write_num and file number to start on that they like.", "markup": "markdown", "html": "<p>Hey Ben &amp; Keaton,</p>\n<p>I think it would be useful if, when creating a file handler, you could specify the write_num to start on, and which file number to start writing (i.e., output_s5_p0.h5 rather than output_s1_p0.h5).  Also, right now, it seems like the default is to do all output at the beginning of each simulation -- it would be nice (for the purposes of restarting) if there was some way to turn this off.</p>\n<p>I agree that it seems impossible to come up with a way to always calculate the appropriate write_num and file number to start on.  However, we could include some function to calculate these for \"normal\" use cases (i.e., look at the previous outputs and find the latest time before the restart).  If the user is doing something more complicated, then they can pick whichever write_num and file number to start on that they like.</p>", "type": "rendered"}, "created_on": "2015-08-25T21:10:29.944300+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-08-25T21:10:29.951524+00:00", "type": "pullrequest_comment", "id": 9373601}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372981.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372981"}}, "parent": {"id": 9299952, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9299952.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9299952"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "@kburns, if you could point me at a changeset hash, I can test this on some GSF runs.", "markup": "markdown", "html": "<p>@kburns, if you could point me at a changeset hash, I can test this on some GSF runs.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:49:35.528305+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2015-08-25T20:49:35.541825+00:00", "type": "pullrequest_comment", "id": 9372981}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372955.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372955"}}, "parent": {"id": 8648867, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8648867.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8648867"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "regarding 1), @kburns, do you propose that we use hg phases to implement the squashed change logs? I really like that approach.", "markup": "markdown", "html": "<p>regarding 1), @kburns, do you propose that we use hg phases to implement the squashed change logs? I really like that approach.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:48:45.800800+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2015-08-25T20:48:45.861329+00:00", "type": "pullrequest_comment", "id": 9372955}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372728.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372728"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton,\n      That sounds good.  I'm excited about the auto-detection and handling of resolution changes.  \n\nDoes that work for compound basis as well?  If so, does it assume that the break point between the compound bases is at the same location, and only the number of modes changes?\n\n\n #3 is intricate, but I think it's also crucial.  I have an idea about how to do that, but need to think it through a bit further.  Maybe we could talk it through later this week (Friday?).  First week of classes at CU, and first week back at work, so Friday is probably the first day I'll be able to think clearly about anything.\n\nExcited to see the load_state implementation.", "markup": "markdown", "html": "<p>Keaton,\n      That sounds good.  I'm excited about the auto-detection and handling of resolution changes.  </p>\n<p>Does that work for compound basis as well?  If so, does it assume that the break point between the compound bases is at the same location, and only the number of modes changes?</p>\n<p><a href=\"#!/dedalus-project/dedalus/issues/3/hack-sparse-structure-for-system\" rel=\"nofollow\" title=\"hack sparse structure for system\" class=\"ap-connect-link\"><s>#3</s></a> is intricate, but I think it's also crucial.  I have an idea about how to do that, but need to think it through a bit further.  Maybe we could talk it through later this week (Friday?).  First week of classes at CU, and first week back at work, so Friday is probably the first day I'll be able to think clearly about anything.</p>\n<p>Excited to see the load_state implementation.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:40:42.929156+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-08-25T20:40:42.937676+00:00", "type": "pullrequest_comment", "id": 9372728}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "7be30f96c5e9", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/7be30f96c5e9.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/7be30f96c5e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-08-25T15:09:53.476063+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "f8364b9561ea", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f8364b9561ea.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f8364b9561ea"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-08-25T15:08:00.900418+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9299952.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9299952"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Hi Ben, I spent some time thinking about restarts, and realized that a few of the goals we listed here may be pretty intricate.  In particular `#3`: picking up analysis tasks from the last write.  The issue is that generally the number of handlers, the specific analysis tasks, and/or their cadences may all change when you restart, so working out a system that begins with the right write numbers, etc., may be tricky and have a lot of corner cases.\n\nThat issue aside: I wrote up a 'load_state' method for the IVP solver that allows you to load state variables from any (merged) dedalus HDF5 output file, and returns the timestep that was used when that snapshot was created.  It automatically detects and handles any layout and resolution change, so should pass `#1`, `#2` (using RK methods), and `#4` on your list above.\n\nI'll put together an example using it with the 2D RBC example in my branch.  It may provide a good low-level solution for basic restarting using the current file handler, and serve as a good base for a higher-level checkpointing system focused on the other usability features you've outlined here.  Thoughts?", "markup": "markdown", "html": "<p>Hi Ben, I spent some time thinking about restarts, and realized that a few of the goals we listed here may be pretty intricate.  In particular <code>#3</code>: picking up analysis tasks from the last write.  The issue is that generally the number of handlers, the specific analysis tasks, and/or their cadences may all change when you restart, so working out a system that begins with the right write numbers, etc., may be tricky and have a lot of corner cases.</p>\n<p>That issue aside: I wrote up a 'load_state' method for the IVP solver that allows you to load state variables from any (merged) dedalus HDF5 output file, and returns the timestep that was used when that snapshot was created.  It automatically detects and handles any layout and resolution change, so should pass <code>#1</code>, <code>#2</code> (using RK methods), and <code>#4</code> on your list above.</p>\n<p>I'll put together an example using it with the 2D RBC example in my branch.  It may provide a good low-level solution for basic restarting using the current file handler, and serve as a good base for a higher-level checkpointing system focused on the other usability features you've outlined here.  Thoughts?</p>", "type": "rendered"}, "created_on": "2015-08-23T00:00:24.201234+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-23T00:02:48.531715+00:00", "type": "pullrequest_comment", "id": 9299952}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "2119e1009987", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/2119e1009987.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/2119e1009987"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-08-22T19:57:29.124647+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "6672b6503105", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/6672b6503105.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/6672b6503105"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-08-18T16:02:18.015157+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}], "next": "data/repositories/dedalus-project/dedalus/pullrequests/30/activity_ctx=d8rCGsMtz.json"}