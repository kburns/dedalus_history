{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/7992287.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-7992287"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "There seems to be a bug in restart if the fields are not initially in the correct layout.  The statement:\n```\n#!python\nslices = solver.state[variable].layout.slices\n```\nis only going to give you the correct slices if\n\n```\n#!python\nsolver.state[variable].layout==layout\n```\n", "markup": "markdown", "html": "<p>There seems to be a bug in restart if the fields are not initially in the correct layout.  The statement:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">slices</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"n\">variable</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">slices</span>\n</pre></div>\n\n\n<p>is only going to give you the correct slices if</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"n\">variable</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">==</span><span class=\"n\">layout</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-07-03T00:41:30.784199+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-07-03T00:41:30.789217+00:00", "type": "pullrequest_comment", "id": 7992287}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8015854.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8015854"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Here's a quick summary of issues I see as needing addressed before this can be merged.  Please add further suggestions, I'll do the same, and then we can get a first iteration of checkpointing finished.\n\n\nOutstanding to-do list:\n\n1. Automatic variable spatial resolution\n    * possible to do: need to store current resolution in standard way in metadata?\n    * Right now, it's not clear how to figure out which dimensions are which, but this may already be sufficiently embedded in the checkpoint file.  Beware possible \"stored in coeff space but restart in grid space problems like Ghanesh encountered.\n\n2. Exact timestepper restart capability:\n    A. Pick up prior dt for exact restart reproducibility using RK and other multistage methods \n        * to do: need to store prior dt in metadata\n\n    B. Consider mechanism for exact restarts in multistep methods.  \n        * Currently, we bootstrap on restart from low order to desired order. \n        * Exact restart requires storing multiple prior timesteps to fully re-create the solution.   \n        * This may be deferred to a later PR.\n\n3. Optionally pick up existing write number for analysis files, to avoid clobbering exisiting outputs on restart\n    * default should be to pick up write number.\n    * optional in case you are branching a case at restart (parameter change, etc.)\n\n4. Implement layout restart bugfix from Ghanesh & @lecoanet (comment above)\n\n5. possible: implement parameter based naming for output data dir in example script, as in FC_nrho3.5py\n\n6. possible: test for restart that runs short case, does restart at midway point, compares differences after restart and after timestepping?\n\n\n\nI view 1--4 as critical before merge, while 5 & 6 are optional and (like 2.B) could be done in a later PR.", "markup": "markdown", "html": "<p>Here's a quick summary of issues I see as needing addressed before this can be merged.  Please add further suggestions, I'll do the same, and then we can get a first iteration of checkpointing finished.</p>\n<p>Outstanding to-do list:</p>\n<ol>\n<li>\n<p>Automatic variable spatial resolution</p>\n<ul>\n<li>possible to do: need to store current resolution in standard way in metadata?</li>\n<li>Right now, it's not clear how to figure out which dimensions are which, but this may already be sufficiently embedded in the checkpoint file.  Beware possible \"stored in coeff space but restart in grid space problems like Ghanesh encountered.</li>\n</ul>\n</li>\n<li>\n<p>Exact timestepper restart capability:\n    A. Pick up prior dt for exact restart reproducibility using RK and other multistage methods \n        * to do: need to store prior dt in metadata</p>\n<p>B. Consider mechanism for exact restarts in multistep methods.<br />\n    * Currently, we bootstrap on restart from low order to desired order. \n    * Exact restart requires storing multiple prior timesteps to fully re-create the solution. <br />\n    * This may be deferred to a later PR.</p>\n</li>\n<li>\n<p>Optionally pick up existing write number for analysis files, to avoid clobbering exisiting outputs on restart</p>\n<ul>\n<li>default should be to pick up write number.</li>\n<li>optional in case you are branching a case at restart (parameter change, etc.)</li>\n</ul>\n</li>\n<li>\n<p>Implement layout restart bugfix from Ghanesh &amp; @lecoanet (comment above)</p>\n</li>\n<li>\n<p>possible: implement parameter based naming for output data dir in example script, as in FC_nrho3.5py</p>\n</li>\n<li>\n<p>possible: test for restart that runs short case, does restart at midway point, compares differences after restart and after timestepping?</p>\n</li>\n</ol>\n<p>I view 1--4 as critical before merge, while 5 &amp; 6 are optional and (like 2.B) could be done in a later PR.</p>", "type": "rendered"}, "created_on": "2015-07-04T21:13:28.089791+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-07-04T21:13:28.100060+00:00", "type": "pullrequest_comment", "id": 8015854}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8016457.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8016457"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Implementing 3 would be really great.", "markup": "markdown", "html": "<p>Implementing 3 would be really great.</p>", "type": "rendered"}, "created_on": "2015-07-05T03:44:42.072011+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-07-05T03:44:42.078621+00:00", "type": "pullrequest_comment", "id": 8016457}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8609905.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8609905"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "I think a good place to start would be to squash down these commits into a single one, since there are a lot of changes / approaches that don't seem to have panned out.  Also I think the structures changes to the example problem should probably be removed to keep it in line with the standard example style, since I don't think the doc-opt style execution is required for using this type of checkpointing (or is it?).  If you'd like I can start making these changes and then implemented the variable resolution restarts, etc.", "markup": "markdown", "html": "<p>I think a good place to start would be to squash down these commits into a single one, since there are a lot of changes / approaches that don't seem to have panned out.  Also I think the structures changes to the example problem should probably be removed to keep it in line with the standard example style, since I don't think the doc-opt style execution is required for using this type of checkpointing (or is it?).  If you'd like I can start making these changes and then implemented the variable resolution restarts, etc.</p>", "type": "rendered"}, "created_on": "2015-07-29T01:03:33.039338+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-07-29T01:03:33.044760+00:00", "type": "pullrequest_comment", "id": 8609905}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8644334.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8644334"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton, two questions/notes:\n\n1) What is the value in squashing the commit log?  I'm happy to do so, especially if you can send some direction on this, but the value of doing the squash is unclear to me.\n\n2) I've used a docopt style so the same script can both do the initial run and the subsequent restart.  Otherwise we need two scripts to demonstrate capability, which seemed inelegant.  Docopt is not required by checkpointing itself.\n\nI agree that the other structure changes like \"if __name__=='__main__'\" and the modularization of the problem may be too distracting.  Those are easy to remove.", "markup": "markdown", "html": "<p>Keaton, two questions/notes:</p>\n<p>1) What is the value in squashing the commit log?  I'm happy to do so, especially if you can send some direction on this, but the value of doing the squash is unclear to me.</p>\n<p>2) I've used a docopt style so the same script can both do the initial run and the subsequent restart.  Otherwise we need two scripts to demonstrate capability, which seemed inelegant.  Docopt is not required by checkpointing itself.</p>\n<p>I agree that the other structure changes like \"if <strong>name</strong>=='<strong>main</strong>'\" and the modularization of the problem may be too distracting.  Those are easy to remove.</p>", "type": "rendered"}, "created_on": "2015-07-29T22:44:57.327035+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-07-29T22:44:57.332951+00:00", "type": "pullrequest_comment", "id": 8644334}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8666767.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8666767"}}, "parent": {"id": 8644334, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8644334.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8644334"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Regarding 2), I'm opposed to using docopt, because it introduces another dependency. However, you could rewrite it to use the standard library optparse to parse command line options if you'd like. Though I am inclined to agree with Keaton that example scripts should be as simple as possible to avoid introducing additional learning curves for people looking for examples. ", "markup": "markdown", "html": "<p>Regarding 2), I'm opposed to using docopt, because it introduces another dependency. However, you could rewrite it to use the standard library optparse to parse command line options if you'd like. Though I am inclined to agree with Keaton that example scripts should be as simple as possible to avoid introducing additional learning curves for people looking for examples. </p>", "type": "rendered"}, "created_on": "2015-07-30T14:32:48.387385+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2015-07-30T14:32:48.399564+00:00", "type": "pullrequest_comment", "id": 8666767}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8648867.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8648867"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "1) This is somewhat a matter of taste, but I think that commits ending up in the main repo should ideally be concise descriptions of additions or fixes to the code, and less of a work-log documenting the entire approach to a working feature, since for everyone this is often ridden with false-starts and minor errors that just don't end up being very useful to others.  Squashing things down to a few commits detailing the major changes (e.g. maybe one for the full implementation, another for updating the examples, etc) makes things a lot easier for others to understand when looking back at the main repo log.  As it stands, there are many non or partially functional commits in the dedalus history (primarily my fault), but I think it's better-late-than-never for trying to improve this situation.  It also looks to be pretty much standard practice in e.g. scipy development.\n\n2) Yeah I was specifically referring to the modularization.  I guess I prefer setting up basic run parameters (including physical parameters, but also possibly a restart flag/file) explicitly at the top of the file rather than through the command line, just so they're directly documented in the script rather than having to be repeated in the output.  I think this approach could still work with just one script, since you already have to add the case statements on setting up the IC's vs pulling data from a checkpoint, by checking the restart keyword that's passed to the setup function.\n", "markup": "markdown", "html": "<p>1) This is somewhat a matter of taste, but I think that commits ending up in the main repo should ideally be concise descriptions of additions or fixes to the code, and less of a work-log documenting the entire approach to a working feature, since for everyone this is often ridden with false-starts and minor errors that just don't end up being very useful to others.  Squashing things down to a few commits detailing the major changes (e.g. maybe one for the full implementation, another for updating the examples, etc) makes things a lot easier for others to understand when looking back at the main repo log.  As it stands, there are many non or partially functional commits in the dedalus history (primarily my fault), but I think it's better-late-than-never for trying to improve this situation.  It also looks to be pretty much standard practice in e.g. scipy development.</p>\n<p>2) Yeah I was specifically referring to the modularization.  I guess I prefer setting up basic run parameters (including physical parameters, but also possibly a restart flag/file) explicitly at the top of the file rather than through the command line, just so they're directly documented in the script rather than having to be repeated in the output.  I think this approach could still work with just one script, since you already have to add the case statements on setting up the IC's vs pulling data from a checkpoint, by checking the restart keyword that's passed to the setup function.</p>", "type": "rendered"}, "created_on": "2015-07-30T04:26:26.899907+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-07-30T04:26:26.907803+00:00", "type": "pullrequest_comment", "id": 8648867}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372955.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372955"}}, "parent": {"id": 8648867, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8648867.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8648867"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "regarding 1), @kburns, do you propose that we use hg phases to implement the squashed change logs? I really like that approach.", "markup": "markdown", "html": "<p>regarding 1), @kburns, do you propose that we use hg phases to implement the squashed change logs? I really like that approach.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:48:45.800800+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2015-08-25T20:48:45.861329+00:00", "type": "pullrequest_comment", "id": 9372955}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376067.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376067"}}, "parent": {"id": 9372955, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372955.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372955"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Yep, I've set my fork to be a non-published repository so that I can still push/backup draft-phase changes.  Then I can just rebase/collapse, and if necessary strip old versions from the repo, when I want to issue or update a PR.", "markup": "markdown", "html": "<p>Yep, I've set my fork to be a non-published repository so that I can still push/backup draft-phase changes.  Then I can just rebase/collapse, and if necessary strip old versions from the repo, when I want to issue or update a PR.</p>", "type": "rendered"}, "created_on": "2015-08-25T23:01:32.083838+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-25T23:02:18.391511+00:00", "type": "pullrequest_comment", "id": 9376067}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379288.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379288"}}, "parent": {"id": 9376067, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376067.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376067"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton,\n     Could you at some point send me a walkthrough of how to do that, so I\ncan do that for the checkpointing PR?\n\n--Ben", "markup": "markdown", "html": "<p>Keaton,\n     Could you at some point send me a walkthrough of how to do that, so I\ncan do that for the checkpointing PR?</p>\n<p>--Ben</p>", "type": "rendered"}, "created_on": "2015-08-26T03:15:37.724455+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-08-26T03:15:37.756007+00:00", "type": "pullrequest_comment", "id": 9379288}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9397929.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9397929"}}, "parent": {"id": 9379288, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379288.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379288"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Happy to talk about it sometime.  Best place to start reading is just the hg docs:\n\nhttps://mercurial.selenic.com/wiki/Phases\n\nhttps://mercurial.selenic.com/wiki/RebaseExtension", "markup": "markdown", "html": "<p>Happy to talk about it sometime.  Best place to start reading is just the hg docs:</p>\n<p><a href=\"https://mercurial.selenic.com/wiki/Phases\" rel=\"nofollow\" class=\"ap-connect-link\">https://mercurial.selenic.com/wiki/Phases</a></p>\n<p><a href=\"https://mercurial.selenic.com/wiki/RebaseExtension\" rel=\"nofollow\" class=\"ap-connect-link\">https://mercurial.selenic.com/wiki/RebaseExtension</a></p>", "type": "rendered"}, "created_on": "2015-08-26T14:10:03.174873+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-26T14:10:03.255744+00:00", "type": "pullrequest_comment", "id": 9397929}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9299952.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9299952"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Hi Ben, I spent some time thinking about restarts, and realized that a few of the goals we listed here may be pretty intricate.  In particular `#3`: picking up analysis tasks from the last write.  The issue is that generally the number of handlers, the specific analysis tasks, and/or their cadences may all change when you restart, so working out a system that begins with the right write numbers, etc., may be tricky and have a lot of corner cases.\n\nThat issue aside: I wrote up a 'load_state' method for the IVP solver that allows you to load state variables from any (merged) dedalus HDF5 output file, and returns the timestep that was used when that snapshot was created.  It automatically detects and handles any layout and resolution change, so should pass `#1`, `#2` (using RK methods), and `#4` on your list above.\n\nI'll put together an example using it with the 2D RBC example in my branch.  It may provide a good low-level solution for basic restarting using the current file handler, and serve as a good base for a higher-level checkpointing system focused on the other usability features you've outlined here.  Thoughts?", "markup": "markdown", "html": "<p>Hi Ben, I spent some time thinking about restarts, and realized that a few of the goals we listed here may be pretty intricate.  In particular <code>#3</code>: picking up analysis tasks from the last write.  The issue is that generally the number of handlers, the specific analysis tasks, and/or their cadences may all change when you restart, so working out a system that begins with the right write numbers, etc., may be tricky and have a lot of corner cases.</p>\n<p>That issue aside: I wrote up a 'load_state' method for the IVP solver that allows you to load state variables from any (merged) dedalus HDF5 output file, and returns the timestep that was used when that snapshot was created.  It automatically detects and handles any layout and resolution change, so should pass <code>#1</code>, <code>#2</code> (using RK methods), and <code>#4</code> on your list above.</p>\n<p>I'll put together an example using it with the 2D RBC example in my branch.  It may provide a good low-level solution for basic restarting using the current file handler, and serve as a good base for a higher-level checkpointing system focused on the other usability features you've outlined here.  Thoughts?</p>", "type": "rendered"}, "created_on": "2015-08-23T00:00:24.201234+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-23T00:02:48.531715+00:00", "type": "pullrequest_comment", "id": 9299952}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372981.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372981"}}, "parent": {"id": 9299952, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9299952.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9299952"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "@kburns, if you could point me at a changeset hash, I can test this on some GSF runs.", "markup": "markdown", "html": "<p>@kburns, if you could point me at a changeset hash, I can test this on some GSF runs.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:49:35.528305+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2015-08-25T20:49:35.541825+00:00", "type": "pullrequest_comment", "id": 9372981}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376129.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376129"}}, "parent": {"id": 9372981, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372981.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372981"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Implemented in the 'checkpoint' bookmark of my fork.  I'll try to add an example soon.", "markup": "markdown", "html": "<p>Implemented in the 'checkpoint' bookmark of my fork.  I'll try to add an example soon.</p>", "type": "rendered"}, "created_on": "2015-08-25T23:05:09.721471+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-25T23:05:09.728656+00:00", "type": "pullrequest_comment", "id": 9376129}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372728.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372728"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton,\n      That sounds good.  I'm excited about the auto-detection and handling of resolution changes.  \n\nDoes that work for compound basis as well?  If so, does it assume that the break point between the compound bases is at the same location, and only the number of modes changes?\n\n\n #3 is intricate, but I think it's also crucial.  I have an idea about how to do that, but need to think it through a bit further.  Maybe we could talk it through later this week (Friday?).  First week of classes at CU, and first week back at work, so Friday is probably the first day I'll be able to think clearly about anything.\n\nExcited to see the load_state implementation.", "markup": "markdown", "html": "<p>Keaton,\n      That sounds good.  I'm excited about the auto-detection and handling of resolution changes.  </p>\n<p>Does that work for compound basis as well?  If so, does it assume that the break point between the compound bases is at the same location, and only the number of modes changes?</p>\n<p><a href=\"#!/dedalus-project/dedalus/issues/3/hack-sparse-structure-for-system\" rel=\"nofollow\" title=\"hack sparse structure for system\" class=\"ap-connect-link\"><s>#3</s></a> is intricate, but I think it's also crucial.  I have an idea about how to do that, but need to think it through a bit further.  Maybe we could talk it through later this week (Friday?).  First week of classes at CU, and first week back at work, so Friday is probably the first day I'll be able to think clearly about anything.</p>\n<p>Excited to see the load_state implementation.</p>", "type": "rendered"}, "created_on": "2015-08-25T20:40:42.929156+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-08-25T20:40:42.937676+00:00", "type": "pullrequest_comment", "id": 9372728}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9376172.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9376172"}}, "parent": {"id": 9372728, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9372728.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9372728"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "It should work with compound bases, but yes assumes that the subintervals are the same, and that all the subresolutions have changed commensurately.  Basically it's loading old data of arbitrary shape by viewing it as a scaled version of the new shape, and all of the basis in a compound bases get scaled together.\n\nHappy to talk any time this week.  I've pushed the load_state method to the 'checkpoint' bookmark of my fork.", "markup": "markdown", "html": "<p>It should work with compound bases, but yes assumes that the subintervals are the same, and that all the subresolutions have changed commensurately.  Basically it's loading old data of arbitrary shape by viewing it as a scaled version of the new shape, and all of the basis in a compound bases get scaled together.</p>\n<p>Happy to talk any time this week.  I've pushed the load_state method to the 'checkpoint' bookmark of my fork.</p>", "type": "rendered"}, "created_on": "2015-08-25T23:08:56.311849+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-25T23:08:56.319726+00:00", "type": "pullrequest_comment", "id": 9376172}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9373601.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9373601"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Hey Ben & Keaton,\n\nI think it would be useful if, when creating a file handler, you could specify the write_num to start on, and which file number to start writing (i.e., output_s5_p0.h5 rather than output_s1_p0.h5).  Also, right now, it seems like the default is to do all output at the beginning of each simulation -- it would be nice (for the purposes of restarting) if there was some way to turn this off.\n\nI agree that it seems impossible to come up with a way to always calculate the appropriate write_num and file number to start on.  However, we could include some function to calculate these for \"normal\" use cases (i.e., look at the previous outputs and find the latest time before the restart).  If the user is doing something more complicated, then they can pick whichever write_num and file number to start on that they like.", "markup": "markdown", "html": "<p>Hey Ben &amp; Keaton,</p>\n<p>I think it would be useful if, when creating a file handler, you could specify the write_num to start on, and which file number to start writing (i.e., output_s5_p0.h5 rather than output_s1_p0.h5).  Also, right now, it seems like the default is to do all output at the beginning of each simulation -- it would be nice (for the purposes of restarting) if there was some way to turn this off.</p>\n<p>I agree that it seems impossible to come up with a way to always calculate the appropriate write_num and file number to start on.  However, we could include some function to calculate these for \"normal\" use cases (i.e., look at the previous outputs and find the latest time before the restart).  If the user is doing something more complicated, then they can pick whichever write_num and file number to start on that they like.</p>", "type": "rendered"}, "created_on": "2015-08-25T21:10:29.944300+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-08-25T21:10:29.951524+00:00", "type": "pullrequest_comment", "id": 9373601}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9378657.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9378657"}}, "parent": {"id": 9373601, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9373601.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9373601"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Yeah, we can definitely add in keyword options to set the first write / set numbers.  I think trying to pick up from the old files is where things get tricky, since it's not clear how to do that if the tasks change, etc.  Also an advantage of just starting new output is that you avoid the possibility of clobbering existing data, and then you can just stitch together the output from multiple runs in post-processing. \n\nI've also been thinking of a change to the cadence system to specify start/end times for performing analysis, instead of just steady cadences, which could have lots of uses and address your question about analysis of the first iteration of a restart.", "markup": "markdown", "html": "<p>Yeah, we can definitely add in keyword options to set the first write / set numbers.  I think trying to pick up from the old files is where things get tricky, since it's not clear how to do that if the tasks change, etc.  Also an advantage of just starting new output is that you avoid the possibility of clobbering existing data, and then you can just stitch together the output from multiple runs in post-processing. </p>\n<p>I've also been thinking of a change to the cadence system to specify start/end times for performing analysis, instead of just steady cadences, which could have lots of uses and address your question about analysis of the first iteration of a restart.</p>", "type": "rendered"}, "created_on": "2015-08-26T02:17:02.476275+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-08-26T02:17:02.481075+00:00", "type": "pullrequest_comment", "id": 9378657}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379294.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379294"}}, "parent": {"id": 9378657, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9378657.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9378657"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Here's a description of what I was envisioning.  By default, all output will start write data with write number of 1, set number of 1.  However, we can include a function that looks at an output directory, and tries to find the last set number and write number before a given time.  If a user wants, they could use this to find the last set number and write number before their checkpoint, and then start output with write/set numbers 1 larger than each of these.  This wouldn't involving adding new data to any existing output file -- it only helps organize the files you're outputting to.  This would make stitching together the output of multiple runs easier, but shouldn't cause any problems if tasks change.", "markup": "markdown", "html": "<p>Here's a description of what I was envisioning.  By default, all output will start write data with write number of 1, set number of 1.  However, we can include a function that looks at an output directory, and tries to find the last set number and write number before a given time.  If a user wants, they could use this to find the last set number and write number before their checkpoint, and then start output with write/set numbers 1 larger than each of these.  This wouldn't involving adding new data to any existing output file -- it only helps organize the files you're outputting to.  This would make stitching together the output of multiple runs easier, but shouldn't cause any problems if tasks change.</p>", "type": "rendered"}, "created_on": "2015-08-26T03:16:27.016395+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-08-26T03:16:27.022429+00:00", "type": "pullrequest_comment", "id": 9379294}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9666832.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9666832"}}, "parent": {"id": 9379294, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/9379294.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-9379294"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Good idea -- it doesn't prevent you from clobbering data but it's make it pretty easy to avoid doing so.  I've added this to my branch with the load_state function, and issued a separate PR.", "markup": "markdown", "html": "<p>Good idea -- it doesn't prevent you from clobbering data but it's make it pretty easy to avoid doing so.  I've added this to my branch with the load_state function, and issued a separate PR.</p>", "type": "rendered"}, "created_on": "2015-09-04T17:03:53.936767+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-09-04T17:03:53.944425+00:00", "type": "pullrequest_comment", "id": 9666832}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/20526864.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-20526864"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Declining this PR in favor of better implementation by @jsoishi in pull request #35 (simple checkpointing mechanism).", "markup": "markdown", "html": "<p>Declining this PR in favor of better implementation by @jsoishi in <a href=\"#!/dedalus-project/dedalus/pull-requests/35/simple-checkpointing-mechanism\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #35</a> (simple checkpointing mechanism).</p>", "type": "rendered"}, "created_on": "2016-07-01T22:02:50.088403+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2016-07-01T22:02:50.095041+00:00", "type": "pullrequest_comment", "id": 20526864}], "page": 1, "size": 21}