{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8666767.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8666767"}}, "parent": {"id": 8644334, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8644334.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8644334"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Regarding 2), I'm opposed to using docopt, because it introduces another dependency. However, you could rewrite it to use the standard library optparse to parse command line options if you'd like. Though I am inclined to agree with Keaton that example scripts should be as simple as possible to avoid introducing additional learning curves for people looking for examples. ", "markup": "markdown", "html": "<p>Regarding 2), I'm opposed to using docopt, because it introduces another dependency. However, you could rewrite it to use the standard library optparse to parse command line options if you'd like. Though I am inclined to agree with Keaton that example scripts should be as simple as possible to avoid introducing additional learning curves for people looking for examples. </p>", "type": "rendered"}, "created_on": "2015-07-30T14:32:48.387385+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2015-07-30T14:32:48.399564+00:00", "type": "pullrequest_comment", "id": 8666767}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8648867.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8648867"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "1) This is somewhat a matter of taste, but I think that commits ending up in the main repo should ideally be concise descriptions of additions or fixes to the code, and less of a work-log documenting the entire approach to a working feature, since for everyone this is often ridden with false-starts and minor errors that just don't end up being very useful to others.  Squashing things down to a few commits detailing the major changes (e.g. maybe one for the full implementation, another for updating the examples, etc) makes things a lot easier for others to understand when looking back at the main repo log.  As it stands, there are many non or partially functional commits in the dedalus history (primarily my fault), but I think it's better-late-than-never for trying to improve this situation.  It also looks to be pretty much standard practice in e.g. scipy development.\n\n2) Yeah I was specifically referring to the modularization.  I guess I prefer setting up basic run parameters (including physical parameters, but also possibly a restart flag/file) explicitly at the top of the file rather than through the command line, just so they're directly documented in the script rather than having to be repeated in the output.  I think this approach could still work with just one script, since you already have to add the case statements on setting up the IC's vs pulling data from a checkpoint, by checking the restart keyword that's passed to the setup function.\n", "markup": "markdown", "html": "<p>1) This is somewhat a matter of taste, but I think that commits ending up in the main repo should ideally be concise descriptions of additions or fixes to the code, and less of a work-log documenting the entire approach to a working feature, since for everyone this is often ridden with false-starts and minor errors that just don't end up being very useful to others.  Squashing things down to a few commits detailing the major changes (e.g. maybe one for the full implementation, another for updating the examples, etc) makes things a lot easier for others to understand when looking back at the main repo log.  As it stands, there are many non or partially functional commits in the dedalus history (primarily my fault), but I think it's better-late-than-never for trying to improve this situation.  It also looks to be pretty much standard practice in e.g. scipy development.</p>\n<p>2) Yeah I was specifically referring to the modularization.  I guess I prefer setting up basic run parameters (including physical parameters, but also possibly a restart flag/file) explicitly at the top of the file rather than through the command line, just so they're directly documented in the script rather than having to be repeated in the output.  I think this approach could still work with just one script, since you already have to add the case statements on setting up the IC's vs pulling data from a checkpoint, by checking the restart keyword that's passed to the setup function.</p>", "type": "rendered"}, "created_on": "2015-07-30T04:26:26.899907+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-07-30T04:26:26.907803+00:00", "type": "pullrequest_comment", "id": 8648867}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8644334.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8644334"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Keaton, two questions/notes:\n\n1) What is the value in squashing the commit log?  I'm happy to do so, especially if you can send some direction on this, but the value of doing the squash is unclear to me.\n\n2) I've used a docopt style so the same script can both do the initial run and the subsequent restart.  Otherwise we need two scripts to demonstrate capability, which seemed inelegant.  Docopt is not required by checkpointing itself.\n\nI agree that the other structure changes like \"if __name__=='__main__'\" and the modularization of the problem may be too distracting.  Those are easy to remove.", "markup": "markdown", "html": "<p>Keaton, two questions/notes:</p>\n<p>1) What is the value in squashing the commit log?  I'm happy to do so, especially if you can send some direction on this, but the value of doing the squash is unclear to me.</p>\n<p>2) I've used a docopt style so the same script can both do the initial run and the subsequent restart.  Otherwise we need two scripts to demonstrate capability, which seemed inelegant.  Docopt is not required by checkpointing itself.</p>\n<p>I agree that the other structure changes like \"if <strong>name</strong>=='<strong>main</strong>'\" and the modularization of the problem may be too distracting.  Those are easy to remove.</p>", "type": "rendered"}, "created_on": "2015-07-29T22:44:57.327035+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-07-29T22:44:57.332951+00:00", "type": "pullrequest_comment", "id": 8644334}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8609905.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8609905"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "I think a good place to start would be to squash down these commits into a single one, since there are a lot of changes / approaches that don't seem to have panned out.  Also I think the structures changes to the example problem should probably be removed to keep it in line with the standard example style, since I don't think the doc-opt style execution is required for using this type of checkpointing (or is it?).  If you'd like I can start making these changes and then implemented the variable resolution restarts, etc.", "markup": "markdown", "html": "<p>I think a good place to start would be to squash down these commits into a single one, since there are a lot of changes / approaches that don't seem to have panned out.  Also I think the structures changes to the example problem should probably be removed to keep it in line with the standard example style, since I don't think the doc-opt style execution is required for using this type of checkpointing (or is it?).  If you'd like I can start making these changes and then implemented the variable resolution restarts, etc.</p>", "type": "rendered"}, "created_on": "2015-07-29T01:03:33.039338+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2015-07-29T01:03:33.044760+00:00", "type": "pullrequest_comment", "id": 8609905}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "dc4b2c6db95b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/dc4b2c6db95b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/dc4b2c6db95b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2015-07-28T20:11:01.491468+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "934902b0fad8", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/934902b0fad8.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/934902b0fad8"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-28T14:31:00.231215+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "9c5d818a9574", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/9c5d818a9574.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/9c5d818a9574"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "f208368fac65", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/f208368fac65"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/f208368fac65"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-07-21T17:25:07.577630+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "9c5d818a9574", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/9c5d818a9574.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/9c5d818a9574"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "5c00bf322a33", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/5c00bf322a33"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/5c00bf322a33"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-20T16:34:53.237274+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "db5024551dfb", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/db5024551dfb.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/db5024551dfb"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "5c00bf322a33", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/5c00bf322a33"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/5c00bf322a33"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-07-20T15:24:12.752178+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "db5024551dfb", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/db5024551dfb.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/db5024551dfb"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-19T01:39:24.054853+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "1ebf8f0acaa7", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/1ebf8f0acaa7.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/1ebf8f0acaa7"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-18T15:17:22.050077+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "fc8553a8dd2d", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/fc8553a8dd2d.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/fc8553a8dd2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-16T15:13:43.054142+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "c74b5df85862", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/c74b5df85862.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/c74b5df85862"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-15T01:36:58.643049+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "1bf133cf4182", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/1bf133cf4182.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/1bf133cf4182"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-15T01:14:52.439544+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "4fbf7ad5a99f", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/4fbf7ad5a99f.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/4fbf7ad5a99f"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-15T01:09:07.963114+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "ce418c35d38c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ce418c35d38c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ce418c35d38c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "0584cd89fb70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/0584cd89fb70"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/0584cd89fb70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-07-14T17:07:25.826890+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "ce418c35d38c", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/ce418c35d38c.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/ce418c35d38c"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-13T18:40:10.812569+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "26835d3ea2df", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/26835d3ea2df.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/26835d3ea2df"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-07-06T19:54:27.154699+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8016457.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8016457"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Implementing 3 would be really great.", "markup": "markdown", "html": "<p>Implementing 3 would be really great.</p>", "type": "rendered"}, "created_on": "2015-07-05T03:44:42.072011+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-07-05T03:44:42.078621+00:00", "type": "pullrequest_comment", "id": 8016457}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/8015854.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-8015854"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "Here's a quick summary of issues I see as needing addressed before this can be merged.  Please add further suggestions, I'll do the same, and then we can get a first iteration of checkpointing finished.\n\n\nOutstanding to-do list:\n\n1. Automatic variable spatial resolution\n    * possible to do: need to store current resolution in standard way in metadata?\n    * Right now, it's not clear how to figure out which dimensions are which, but this may already be sufficiently embedded in the checkpoint file.  Beware possible \"stored in coeff space but restart in grid space problems like Ghanesh encountered.\n\n2. Exact timestepper restart capability:\n    A. Pick up prior dt for exact restart reproducibility using RK and other multistage methods \n        * to do: need to store prior dt in metadata\n\n    B. Consider mechanism for exact restarts in multistep methods.  \n        * Currently, we bootstrap on restart from low order to desired order. \n        * Exact restart requires storing multiple prior timesteps to fully re-create the solution.   \n        * This may be deferred to a later PR.\n\n3. Optionally pick up existing write number for analysis files, to avoid clobbering exisiting outputs on restart\n    * default should be to pick up write number.\n    * optional in case you are branching a case at restart (parameter change, etc.)\n\n4. Implement layout restart bugfix from Ghanesh & @lecoanet (comment above)\n\n5. possible: implement parameter based naming for output data dir in example script, as in FC_nrho3.5py\n\n6. possible: test for restart that runs short case, does restart at midway point, compares differences after restart and after timestepping?\n\n\n\nI view 1--4 as critical before merge, while 5 & 6 are optional and (like 2.B) could be done in a later PR.", "markup": "markdown", "html": "<p>Here's a quick summary of issues I see as needing addressed before this can be merged.  Please add further suggestions, I'll do the same, and then we can get a first iteration of checkpointing finished.</p>\n<p>Outstanding to-do list:</p>\n<ol>\n<li>\n<p>Automatic variable spatial resolution</p>\n<ul>\n<li>possible to do: need to store current resolution in standard way in metadata?</li>\n<li>Right now, it's not clear how to figure out which dimensions are which, but this may already be sufficiently embedded in the checkpoint file.  Beware possible \"stored in coeff space but restart in grid space problems like Ghanesh encountered.</li>\n</ul>\n</li>\n<li>\n<p>Exact timestepper restart capability:\n    A. Pick up prior dt for exact restart reproducibility using RK and other multistage methods \n        * to do: need to store prior dt in metadata</p>\n<p>B. Consider mechanism for exact restarts in multistep methods.<br />\n    * Currently, we bootstrap on restart from low order to desired order. \n    * Exact restart requires storing multiple prior timesteps to fully re-create the solution. <br />\n    * This may be deferred to a later PR.</p>\n</li>\n<li>\n<p>Optionally pick up existing write number for analysis files, to avoid clobbering exisiting outputs on restart</p>\n<ul>\n<li>default should be to pick up write number.</li>\n<li>optional in case you are branching a case at restart (parameter change, etc.)</li>\n</ul>\n</li>\n<li>\n<p>Implement layout restart bugfix from Ghanesh &amp; @lecoanet (comment above)</p>\n</li>\n<li>\n<p>possible: implement parameter based naming for output data dir in example script, as in FC_nrho3.5py</p>\n</li>\n<li>\n<p>possible: test for restart that runs short case, does restart at midway point, compares differences after restart and after timestepping?</p>\n</li>\n</ol>\n<p>I view 1--4 as critical before merge, while 5 &amp; 6 are optional and (like 2.B) could be done in a later PR.</p>", "type": "rendered"}, "created_on": "2015-07-04T21:13:28.089791+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2015-07-04T21:13:28.100060+00:00", "type": "pullrequest_comment", "id": 8015854}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30/comments/7992287.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30/_/diff#comment-7992287"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}, "content": {"raw": "There seems to be a bug in restart if the fields are not initially in the correct layout.  The statement:\n```\n#!python\nslices = solver.state[variable].layout.slices\n```\nis only going to give you the correct slices if\n\n```\n#!python\nsolver.state[variable].layout==layout\n```\n", "markup": "markdown", "html": "<p>There seems to be a bug in restart if the fields are not initially in the correct layout.  The statement:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">slices</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"n\">variable</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">slices</span>\n</pre></div>\n\n\n<p>is only going to give you the correct slices if</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"n\">variable</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">==</span><span class=\"n\">layout</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-07-03T00:41:30.784199+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-07-03T00:41:30.789217+00:00", "type": "pullrequest_comment", "id": 7992287}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "1f8027a040e5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/1f8027a040e5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/1f8027a040e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-30T20:44:50.189938+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "cf964631f944", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/cf964631f944.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/cf964631f944"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-26T16:54:55.839929+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "2671d1713c03", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/2671d1713c03.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/2671d1713c03"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-26T14:53:14.105883+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "db465841d80b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/db465841d80b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/db465841d80b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-06-26T06:09:16.465276+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "f0a92cb4c913", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f0a92cb4c913.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f0a92cb4c913"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-06-26T05:38:30.262836+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "f112f1253e20", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f112f1253e20.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f112f1253e20"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-23T18:23:22.927454+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "d3fb59374432", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/d3fb59374432.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/d3fb59374432"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-23T17:21:04.179446+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "669241228f90", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/669241228f90.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/669241228f90"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "3c6191d5304d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/3c6191d5304d"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/3c6191d5304d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-06-04T21:11:18.905378+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "669241228f90", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/669241228f90.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/669241228f90"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "75fb2565810c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/75fb2565810c"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/75fb2565810c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-06-04T16:00:46.488426+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "669241228f90", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/669241228f90.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/669241228f90"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-03T20:51:50.513262+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "77c39239629b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/77c39239629b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/77c39239629b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-03T10:41:12.445067+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "5250b00945d4", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/5250b00945d4.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/5250b00945d4"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-03T02:46:47.649897+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "7bb5a8d4878b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/7bb5a8d4878b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/7bb5a8d4878b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-06-01T16:13:12.265205+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "6418e7dde46b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/6418e7dde46b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/6418e7dde46b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-05-29T19:07:37.680256+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "b8d031008ec5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/b8d031008ec5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/b8d031008ec5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "date": "2015-05-28T21:31:58.520510+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "da47dfe9a975", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/da47dfe9a975.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/da47dfe9a975"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-05-27T19:09:50.594306+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "de258a86a410", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/de258a86a410.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/de258a86a410"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-05-26T22:25:35.828665+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "37e39625a3cd", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/37e39625a3cd.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/37e39625a3cd"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-05-26T22:03:40.112019+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "be886dcf02cd", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/be886dcf02cd.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/be886dcf02cd"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-05-26T22:01:59.184756+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "6b346299f1c2", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/6b346299f1c2.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/6b346299f1c2"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-05-26T21:41:32.624138+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "bd89db839c0b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/bd89db839c0b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/bd89db839c0b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-03-04T00:02:37.069968+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}, {"update": {"description": "This is a work-in-progress pull request to add checkpointing and restart capability to Dedlus IVP problems.  My goal is to streamline the process of restarting simulations.\r\n\r\nRight now, I've tested this on 2-D problems at fixed resolution, and we correctly determine a functional (though not exactly identical) CFL timestep on restart.  I'm working on variable resolution restart (hooks are in place, but not clear if they work) as the next step.\r\n\r\nThis needs example problems that utilize the checkpointing.  Here is an example:\r\n\r\nestablish saved checkpointing during normal runs:\r\n\r\n    from dedalus.extras.checkpointing import Checkpoint\r\n    checkpoint = Checkpoint(data_dir)\r\n    checkpoint.set_checkpoint(solver, iter=20)\r\n\r\nRestart from specified (joined) checkpoint ('checkpoint_s5.h5'):\r\n\r\n    checkpoint_file = data_dir+'checkpoint/checkpoint_s5.h5'\r\n    checkpoint.restart(checkpoint_file, solver)\r\n\r\nAll comments welcome.", "title": "[WIP] Checkpointing and restart capability", "reviewers": [], "destination": {"commit": {"hash": "bd89db839c0b", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/bd89db839c0b.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/bd89db839c0b"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "36b85e5da0f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown/commit/36b85e5da0f8"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown/commits/36b85e5da0f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/bpbrown/dedalus2-bpbrown"}, "html": {"href": "https://bitbucket.org/bpbrown/dedalus2-bpbrown"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8ad5716d-eadc-4bf7-abf2-be055a494541}ts=python"}}, "type": "repository", "name": "dedalus2 - bpbrown", "full_name": "bpbrown/dedalus2-bpbrown", "uuid": "{8ad5716d-eadc-4bf7-abf2-be055a494541}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "date": "2015-03-04T00:02:37.010255+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/30.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/30"}}, "title": "[WIP] Checkpointing and restart capability"}}]}