{"pagelen": 50, "values": [{"update": {"description": "This pull request includes three distinct changes:\r\n\r\nEigenvalue solver:\r\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -> -i omega.  This should be cleaned up to probably substitute dt -> gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.\r\n\r\nAntidifferentiate methods:\r\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.\r\n\r\nMid-domain BC:\r\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.\r\n\r\nBug fix:\r\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.", "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC", "reviewers": [], "destination": {"commit": {"hash": "7637df83c8e5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/7637df83c8e5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/7637df83c8e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "DECLINED", "source": {"commit": {"hash": "b9e8dc996761", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old/commit/b9e8dc996761"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old/commits/b9e8dc996761"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old"}, "avatar": {"href": "data/bytebucket.org/ravatar/{97b351f4-3a92-42a4-985a-146e7cfb9d40}ts=python"}}, "type": "repository", "name": "dedalus2-lecoanet-old", "full_name": "lecoanet/dedalus2-lecoanet-old", "uuid": "{97b351f4-3a92-42a4-985a-146e7cfb9d40}"}, "branch": {"name": "default"}}, "reason": "Accidentally logged in as Jeff...", "author": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "date": "2014-05-30T19:03:18.158813+00:00", "changes": {"status": {"new": "rejected", "old": "open"}}}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC"}}, {"comment": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12/comments/2015457.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12/_/diff#comment-2015457"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC"}, "content": {"raw": "Hmm... This is Daniel trying to submit a pull request... I guess I've been logged in as Jeff this whole time!\n\nDaniel", "markup": "markdown", "html": "<p>Hmm... This is Daniel trying to submit a pull request... I guess I've been logged in as Jeff this whole time!</p>\n<p>Daniel</p>", "type": "rendered"}, "created_on": "2014-05-30T18:45:33.140079+00:00", "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "updated_on": "2014-05-30T18:45:33.146857+00:00", "type": "pullrequest_comment", "id": 2015457}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC"}}, {"update": {"description": "This pull request includes three distinct changes:\r\n\r\nEigenvalue solver:\r\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -> -i omega.  This should be cleaned up to probably substitute dt -> gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.\r\n\r\nAntidifferentiate methods:\r\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.\r\n\r\nMid-domain BC:\r\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.\r\n\r\nBug fix:\r\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.", "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC", "reviewers": [], "destination": {"commit": {"hash": "7637df83c8e5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/7637df83c8e5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/7637df83c8e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "b9e8dc996761", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old/commit/b9e8dc996761"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old/commits/b9e8dc996761"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old"}, "avatar": {"href": "data/bytebucket.org/ravatar/{97b351f4-3a92-42a4-985a-146e7cfb9d40}ts=python"}}, "type": "repository", "name": "dedalus2-lecoanet-old", "full_name": "lecoanet/dedalus2-lecoanet-old", "uuid": "{97b351f4-3a92-42a4-985a-146e7cfb9d40}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2014-05-30T18:43:52.901400+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC"}}, {"update": {"description": "This pull request includes three distinct changes:\r\n\r\nEigenvalue solver:\r\nThis is WIP.  It solved for eigenvalues by making a dense matrix from our problem, under the substitution dt -> -i omega.  This should be cleaned up to probably substitute dt -> gamma, and then sort the eigenvalues, as most of the eigenvalues are going to be either nan's or inf's because our M matrix is singular.\r\n\r\nAntidifferentiate methods:\r\nThe inverse of the differentiate method.  You can specify a boundary condition: either the function is zero on the left or zero on the right.\r\n\r\nMid-domain BC:\r\nThis is WIP.  I tried to set a boundary condition in the middle of the domain.  I think this is implemented correctly, but when I tested it, I got non-sense after a single iteration.  So more testing is needed on this feature.\r\n\r\nBug fix:\r\nI think I fixed a bug in the boundary value problem evaluation logic.  I think the evaluator has changed since BVP was written, so you needed to give a bit more information to the evaluator.", "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC", "reviewers": [], "destination": {"commit": {"hash": "7637df83c8e5", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/7637df83c8e5.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/7637df83c8e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "state": "OPEN", "source": {"commit": {"hash": "b9e8dc996761", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old/commit/b9e8dc996761"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old/commits/b9e8dc996761"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lecoanet/dedalus2-lecoanet-old"}, "html": {"href": "https://bitbucket.org/lecoanet/dedalus2-lecoanet-old"}, "avatar": {"href": "data/bytebucket.org/ravatar/{97b351f4-3a92-42a4-985a-146e7cfb9d40}ts=python"}}, "type": "repository", "name": "dedalus2-lecoanet-old", "full_name": "lecoanet/dedalus2-lecoanet-old", "uuid": "{97b351f4-3a92-42a4-985a-146e7cfb9d40}"}, "branch": {"name": "default"}}, "reason": "", "author": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "date": "2014-05-30T18:43:52.855019+00:00", "changes": {}}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/12.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/12"}}, "title": "WIP: Eigenvalue solver; antidifferentiate methods; mid-domain BC"}}]}