{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/33/comments/9707909.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/33/_/diff#comment-9707909"}}, "parent": {"id": 9707896, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/33/comments/9707896.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/33/_/diff#comment-9707896"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/33.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/33"}}, "title": "Basic restarting capability & example"}, "content": {"raw": "\n```\n#!error\n\nTraceback (most recent call last):\n  File \"anelastic_radconv_hr.py\", line 286, in <module>\n    solver.load_state(file)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/solvers.py\", line 364, in load_state\n    slices = (index,) + layout.slices(scales)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py\", line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py\", line 250, in slices\n    start = self.start(scales)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py\", line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py\", line 227, in start\n    blocks = self.blocks(scales)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py\", line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py\", line 219, in blocks\n    global_shape = self.global_shape(scales)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py\", line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py\", line 209, in global_shape\n    global_grid_shape = self.domain.global_grid_shape(scales)\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/domain.py\", line 66, in global_grid_shape\n    return np.array([b.grid_size(s) for (s, b) in zip(scales, self.bases)])\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/domain.py\", line 66, in <listcomp>\n    return np.array([b.grid_size(s) for (s, b) in zip(scales, self.bases)])\n  File \"/u/dlecoane/kburns/dedalus/dedalus/core/basis.py\", line 108, in grid_size\n    raise ValueError(\"Scaled grid size is not an integer: %f\" %grid_size)\nValueError: Scaled grid size is not an integer: 127.498039\n\n```\n", "markup": "markdown", "html": "<div class=\"codehilite language-error\"><pre><span></span>Traceback (most recent call last):\n  File &quot;anelastic_radconv_hr.py&quot;, line 286, in &lt;module&gt;\n    solver.load_state(file)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/solvers.py&quot;, line 364, in load_state\n    slices = (index,) + layout.slices(scales)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py&quot;, line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py&quot;, line 250, in slices\n    start = self.start(scales)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py&quot;, line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py&quot;, line 227, in start\n    blocks = self.blocks(scales)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py&quot;, line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py&quot;, line 219, in blocks\n    global_shape = self.global_shape(scales)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/tools/cache.py&quot;, line 71, in __call__\n    self.cache[call] = result = self.function(*args, **kw)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/distributor.py&quot;, line 209, in global_shape\n    global_grid_shape = self.domain.global_grid_shape(scales)\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/domain.py&quot;, line 66, in global_grid_shape\n    return np.array([b.grid_size(s) for (s, b) in zip(scales, self.bases)])\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/domain.py&quot;, line 66, in &lt;listcomp&gt;\n    return np.array([b.grid_size(s) for (s, b) in zip(scales, self.bases)])\n  File &quot;/u/dlecoane/kburns/dedalus/dedalus/core/basis.py&quot;, line 108, in grid_size\n    raise ValueError(&quot;Scaled grid size is not an integer: %f&quot; %grid_size)\nValueError: Scaled grid size is not an integer: 127.498039\n</pre></div>", "type": "rendered"}, "created_on": "2015-09-08T03:23:55.899573+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2015-09-08T03:24:26.433627+00:00", "type": "pullrequest_comment", "id": 9707909}