{"rendered": {"description": {"raw": "This pull request primarily adds a scipy-based targeted sparse eigenvalue solver to `tools.sparse`, and adds a corresponding `solve_sparse` method to `EigenvalueSolver`.  The original `solve` method has been renamed to `solve_dense`, but I've left `solve` in as an alias to this, with a deprecation warning, for backwards compatibility.\r\n\r\nThe solver uses sparse routines to find a subset of the system's eigenmodes nearby a specified target eigenvalue.  It is based on scipy's ARPACK wrappers through scipy.sparse.linalg.eigs.\r\n\r\nI've converted the EVP example computing RBC growth rates to the new sparse solver, and it now runs much faster.  I've also tested this solver against SLEPc/PETSc wrappers, and found that it matches or exceeds SLEPc performance for the RBC problem.", "markup": "markdown", "html": "<p>This pull request primarily adds a scipy-based targeted sparse eigenvalue solver to <code>tools.sparse</code>, and adds a corresponding <code>solve_sparse</code> method to <code>EigenvalueSolver</code>.  The original <code>solve</code> method has been renamed to <code>solve_dense</code>, but I've left <code>solve</code> in as an alias to this, with a deprecation warning, for backwards compatibility.</p>\n<p>The solver uses sparse routines to find a subset of the system's eigenmodes nearby a specified target eigenvalue.  It is based on scipy's ARPACK wrappers through scipy.sparse.linalg.eigs.</p>\n<p>I've converted the EVP example computing RBC growth rates to the new sparse solver, and it now runs much faster.  I've also tested this solver against SLEPc/PETSc wrappers, and found that it matches or exceeds SLEPc performance for the RBC problem.</p>", "type": "rendered"}, "title": {"raw": "Add scipy-based sparse eigenvalue solver.", "markup": "markdown", "html": "<p>Add scipy-based sparse eigenvalue solver.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request primarily adds a scipy-based targeted sparse eigenvalue solver to `tools.sparse`, and adds a corresponding `solve_sparse` method to `EigenvalueSolver`.  The original `solve` method has been renamed to `solve_dense`, but I've left `solve` in as an alias to this, with a deprecation warning, for backwards compatibility.\r\n\r\nThe solver uses sparse routines to find a subset of the system's eigenmodes nearby a specified target eigenvalue.  It is based on scipy's ARPACK wrappers through scipy.sparse.linalg.eigs.\r\n\r\nI've converted the EVP example computing RBC growth rates to the new sparse solver, and it now runs much faster.  I've also tested this solver against SLEPc/PETSc wrappers, and found that it matches or exceeds SLEPc performance for the RBC problem.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/pullrequests/43/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/diffstat/dedalus-project/dedalus:f9903fb70a3a%0D126c04833460?from_pullrequest_id=43"}, "commits": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/43/commits.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/43.json"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/43/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/pullrequests/43/merge"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/43"}, "activity": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/43/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/diff/dedalus-project/dedalus:f9903fb70a3a%0D126c04833460?from_pullrequest_id=43"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/pullrequests/43/approve"}, "statuses": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/43/statuses_page=1.json"}}, "title": "Add scipy-based sparse eigenvalue solver.", "close_source_branch": false, "reviewers": [{"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, {"display_name": "Geoffrey Vasil", "uuid": "{ec9259be-a54c-4c63-b96f-730d3e89ef05}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bec9259be-a54c-4c63-b96f-730d3e89ef05%7D"}, "html": {"href": "https://bitbucket.org/%7Bec9259be-a54c-4c63-b96f-730d3e89ef05%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/066b34172584980740ef2ae4c530a8b3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsGV-6.png"}}, "nickname": "gvasil", "type": "user", "account_id": "557058:e21712ff-f90d-47dd-ac9d-39f9035f02bd"}, {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}], "id": 43, "destination": {"commit": {"hash": "126c04833460", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/126c04833460.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/126c04833460"}}}, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "branch": {"name": "default"}}, "created_on": "2017-08-18T13:40:14.046363+00:00", "summary": {"raw": "This pull request primarily adds a scipy-based targeted sparse eigenvalue solver to `tools.sparse`, and adds a corresponding `solve_sparse` method to `EigenvalueSolver`.  The original `solve` method has been renamed to `solve_dense`, but I've left `solve` in as an alias to this, with a deprecation warning, for backwards compatibility.\r\n\r\nThe solver uses sparse routines to find a subset of the system's eigenmodes nearby a specified target eigenvalue.  It is based on scipy's ARPACK wrappers through scipy.sparse.linalg.eigs.\r\n\r\nI've converted the EVP example computing RBC growth rates to the new sparse solver, and it now runs much faster.  I've also tested this solver against SLEPc/PETSc wrappers, and found that it matches or exceeds SLEPc performance for the RBC problem.", "markup": "markdown", "html": "<p>This pull request primarily adds a scipy-based targeted sparse eigenvalue solver to <code>tools.sparse</code>, and adds a corresponding <code>solve_sparse</code> method to <code>EigenvalueSolver</code>.  The original <code>solve</code> method has been renamed to <code>solve_dense</code>, but I've left <code>solve</code> in as an alias to this, with a deprecation warning, for backwards compatibility.</p>\n<p>The solver uses sparse routines to find a subset of the system's eigenmodes nearby a specified target eigenvalue.  It is based on scipy's ARPACK wrappers through scipy.sparse.linalg.eigs.</p>\n<p>I've converted the EVP example computing RBC growth rates to the new sparse solver, and it now runs much faster.  I've also tested this solver against SLEPc/PETSc wrappers, and found that it matches or exceeds SLEPc performance for the RBC problem.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d6d29193cb4a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/kburns/dedalus/commit/d6d29193cb4a"}, "html": {"href": "https://bitbucket.org/kburns/dedalus/commits/d6d29193cb4a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/kburns/dedalus"}, "html": {"href": "https://bitbucket.org/kburns/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{95c6d0f0-02e5-4823-a625-4bc7aafad221}ts=2009448"}}, "type": "repository", "name": "dedalus", "full_name": "kburns/dedalus", "uuid": "{95c6d0f0-02e5-4823-a625-4bc7aafad221}"}, "branch": {"name": "default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2017-08-22T19:41:19.327578+00:00", "type": "participant", "approved": true, "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}}, {"role": "REVIEWER", "participated_on": "2017-08-30T01:54:36.763790+00:00", "type": "participant", "approved": true, "user": {"display_name": "Geoffrey Vasil", "uuid": "{ec9259be-a54c-4c63-b96f-730d3e89ef05}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bec9259be-a54c-4c63-b96f-730d3e89ef05%7D"}, "html": {"href": "https://bitbucket.org/%7Bec9259be-a54c-4c63-b96f-730d3e89ef05%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/066b34172584980740ef2ae4c530a8b3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsGV-6.png"}}, "nickname": "gvasil", "type": "user", "account_id": "557058:e21712ff-f90d-47dd-ac9d-39f9035f02bd"}}, {"role": "REVIEWER", "participated_on": "2017-08-23T21:48:39.030149+00:00", "type": "participant", "approved": true, "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}}, {"role": "REVIEWER", "participated_on": "2017-08-19T01:05:23.064518+00:00", "type": "participant", "approved": true, "user": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}}], "reason": "", "updated_on": "2017-08-30T18:38:06.953476+00:00", "author": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "merge_commit": {"hash": "f9903fb70a3a", "type": "commit", "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/commit/f9903fb70a3a.json"}, "html": {"href": "#!/dedalus-project/dedalus/commits/f9903fb70a3a"}}}, "closed_by": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}}