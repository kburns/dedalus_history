{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25/comments/3360357.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25/_/diff#comment-3360357"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25"}}, "title": "Flow tools generalization"}, "content": {"raw": "Finally looked at this...  I would say that it looks pretty good, but I have two comments.\n\nFirst, for taking volume averages, could we put the integrate(field) into the self.properties evaluator?  This seems more efficient.  Maybe under \"add_property\" add an option saying that you're going to want to know the integral of the field.\n\nSecond, I don't know if we really want to add up all the frequencies for the CFL calculation.  Adding the frequencies makes sense for something like delta x/u + delta y/v + delta z/w, but not if you have a bunch of other unrelated timescales.  What if every time you add a new frequency, a new velocity, or new velocities, we made a new handler.  Then you can add up all the frequencies for each handler, and then take the max over the frequencies of each handler?", "markup": "markdown", "html": "<p>Finally looked at this...  I would say that it looks pretty good, but I have two comments.</p>\n<p>First, for taking volume averages, could we put the integrate(field) into the self.properties evaluator?  This seems more efficient.  Maybe under \"add_property\" add an option saying that you're going to want to know the integral of the field.</p>\n<p>Second, I don't know if we really want to add up all the frequencies for the CFL calculation.  Adding the frequencies makes sense for something like delta x/u + delta y/v + delta z/w, but not if you have a bunch of other unrelated timescales.  What if every time you add a new frequency, a new velocity, or new velocities, we made a new handler.  Then you can add up all the frequencies for each handler, and then take the max over the frequencies of each handler?</p>", "type": "rendered"}, "created_on": "2014-10-07T19:35:26.062430+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2014-10-07T19:35:26.071928+00:00", "type": "pullrequest_comment", "id": 3360357}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25/comments/3360680.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25/_/diff#comment-3360680"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25"}}, "title": "Flow tools generalization"}, "content": {"raw": "Thanks for taking a look.\n1) Yeah that's a good idea, I'll add it in and update the PR.\n2)  There's an infinite number of ways to combine the individual frequencies to compute a global one, and it would be great to see an in-depth analysis of how to best compute the CFL for a spectral code... but in the absence of real evidence as to the best way to do it, I think it makes sense to opt for the simplest choice and treat all timescales equally.  In any case it probably shouldn't make a big difference... it will always be dominated by the fastest timescale and this method just gives a little more padding when there are other important timescales, as well.", "markup": "markdown", "html": "<p>Thanks for taking a look.\n1) Yeah that's a good idea, I'll add it in and update the PR.\n2)  There's an infinite number of ways to combine the individual frequencies to compute a global one, and it would be great to see an in-depth analysis of how to best compute the CFL for a spectral code... but in the absence of real evidence as to the best way to do it, I think it makes sense to opt for the simplest choice and treat all timescales equally.  In any case it probably shouldn't make a big difference... it will always be dominated by the fastest timescale and this method just gives a little more padding when there are other important timescales, as well.</p>", "type": "rendered"}, "created_on": "2014-10-07T19:57:13.520003+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": "2014-10-07T19:57:13.527360+00:00", "type": "pullrequest_comment", "id": 3360680}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25/comments/3364297.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25/_/diff#comment-3364297"}}, "parent": {"id": 3360680, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25/comments/3360680.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25/_/diff#comment-3360680"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25"}}, "title": "Flow tools generalization"}, "content": {"raw": "All,\n    I'll see if I can take a look at it tomorrow afternoon.\n\n--Ben", "markup": "markdown", "html": "<p>All,\n    I'll see if I can take a look at it tomorrow afternoon.</p>\n<p>--Ben</p>", "type": "rendered"}, "created_on": "2014-10-08T02:20:15.950825+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2014-10-08T02:20:15.976992+00:00", "type": "pullrequest_comment", "id": 3364297}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25/comments/4148180.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25/_/diff#comment-4148180"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25"}}, "title": "Flow tools generalization"}, "content": {"raw": "Just tested this (https://bitbucket.org/bpbrown/anelastic_polytrope) and it looks great. Timesteps look correct, flows look right too.  \n\nI vote we merge.", "markup": "markdown", "html": "<p>Just tested this (<a href=\"https://bitbucket.org/bpbrown/anelastic_polytrope\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/bpbrown/anelastic_polytrope</a>) and it looks great. Timesteps look correct, flows look right too.  </p>\n<p>I vote we merge.</p>", "type": "rendered"}, "created_on": "2014-12-03T23:01:56.184960+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": "2014-12-03T23:45:33.475257+00:00", "type": "pullrequest_comment", "id": 4148180}], "page": 1, "size": 4}