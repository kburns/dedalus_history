{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25/comments/3360357.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25/_/diff#comment-3360357"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/pullrequests/25.json"}, "html": {"href": "#!/dedalus-project/dedalus/pull-requests/25"}}, "title": "Flow tools generalization"}, "content": {"raw": "Finally looked at this...  I would say that it looks pretty good, but I have two comments.\n\nFirst, for taking volume averages, could we put the integrate(field) into the self.properties evaluator?  This seems more efficient.  Maybe under \"add_property\" add an option saying that you're going to want to know the integral of the field.\n\nSecond, I don't know if we really want to add up all the frequencies for the CFL calculation.  Adding the frequencies makes sense for something like delta x/u + delta y/v + delta z/w, but not if you have a bunch of other unrelated timescales.  What if every time you add a new frequency, a new velocity, or new velocities, we made a new handler.  Then you can add up all the frequencies for each handler, and then take the max over the frequencies of each handler?", "markup": "markdown", "html": "<p>Finally looked at this...  I would say that it looks pretty good, but I have two comments.</p>\n<p>First, for taking volume averages, could we put the integrate(field) into the self.properties evaluator?  This seems more efficient.  Maybe under \"add_property\" add an option saying that you're going to want to know the integral of the field.</p>\n<p>Second, I don't know if we really want to add up all the frequencies for the CFL calculation.  Adding the frequencies makes sense for something like delta x/u + delta y/v + delta z/w, but not if you have a bunch of other unrelated timescales.  What if every time you add a new frequency, a new velocity, or new velocities, we made a new handler.  Then you can add up all the frequencies for each handler, and then take the max over the frequencies of each handler?</p>", "type": "rendered"}, "created_on": "2014-10-07T19:35:26.062430+00:00", "user": {"display_name": "Daniel Lecoanet", "uuid": "{0ff8d177-8703-4f25-93d4-68857e948a31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D"}, "html": {"href": "https://bitbucket.org/%7B0ff8d177-8703-4f25-93d4-68857e948a31%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/829d5ddfabf278a6c21111d4de2fe031d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDL-3.png"}}, "nickname": "lecoanet", "type": "user", "account_id": "557058:ba5c14ee-54e1-4d72-aa9e-1e2a4c5ab718"}, "updated_on": "2014-10-07T19:35:26.071928+00:00", "type": "pullrequest_comment", "id": 3360357}