{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52493963.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52493963"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": "A workaround for this issue \\(besides just not including those substitutions\\), seems to be introducing a check into the function decrement\\_single in distributor.py such that it doesn\u2019t attempt to transform the data if the layout of the field is already in the layout that it is attempting to transform to. This check takes the form,\n\n```python\ndef decrement_single(self, field):\n        \"\"\"Forward transform.\"\"\"\n        # Reference views from both layouts                                                                                                                                                                 \n        gdata = field.data\n        \n        # Implementing check on layout\n        if field.layout == self.layout0:                                                                                                                                      \n             return                                                                                                                                                                                        \n        else:\n             field.layout = self.layout0\n```", "markup": "markdown", "html": "<p>A workaround for this issue (besides just not including those substitutions), seems to be introducing a check into the function decrement_single in distributor.py such that it doesn\u2019t attempt to transform the data if the layout of the field is already in the layout that it is attempting to transform to. This check takes the form,</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">decrement_single</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Forward transform.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Reference views from both layouts                                                                                                                                                                 </span>\n        <span class=\"n\">gdata</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">data</span>\n\n        <span class=\"c1\"># Implementing check on layout</span>\n        <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">layout</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layout0</span><span class=\"p\">:</span>                                                                                                                                      \n             <span class=\"k\">return</span>                                                                                                                                                                                        \n        <span class=\"k\">else</span><span class=\"p\">:</span>\n             <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layout0</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-06-07T19:37:21.930153+00:00", "user": {"display_name": "Jhett Bordwell", "uuid": "{edb9d81e-36cd-4d5d-bdcf-b73e3d2a962d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bedb9d81e-36cd-4d5d-bdcf-b73e3d2a962d%7D"}, "html": {"href": "https://bitbucket.org/%7Bedb9d81e-36cd-4d5d-bdcf-b73e3d2a962d%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:490cfe71-054b-408c-9f37-3fae874b19cc/051f0265-517a-44eb-89f3-7b2c482c6419/128"}}, "nickname": "jhbordwell", "type": "user", "account_id": "557058:490cfe71-054b-408c-9f37-3fae874b19cc"}, "updated_on": null, "type": "issue_comment", "id": 52493963}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52540933.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52540933"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": "Ok it looks like the previous fix for this \\(commit [52f3274](/dedalus-project/dedalus/commits/52f3274e92632e46f93942e967af4d0fcb0d6488)\\) only worked when the redundant tasks were entered on the same handler.  I just pushed a fix \\(commit [63f1a01](/dedalus-project/dedalus/commits/63f1a0134c21ba345386b71778e64201adc36529)\\) that should work for the general case \u2013 can you give it a try?", "markup": "markdown", "html": "<p>Ok it looks like the previous fix for this (commit <a data-is-external-link=\"true\" href=\"/dedalus-project/dedalus/src/1e1bc32f41bc325d47e92f576c18efa1ad2a4057/dedalus-project/dedalus/commits/52f3274e92632e46f93942e967af4d0fcb0d6488\" rel=\"nofollow\">52f3274</a>) only worked when the redundant tasks were entered on the same handler.  I just pushed a fix (commit <a data-is-external-link=\"true\" href=\"/dedalus-project/dedalus/src/1e1bc32f41bc325d47e92f576c18efa1ad2a4057/dedalus-project/dedalus/commits/63f1a0134c21ba345386b71778e64201adc36529\" rel=\"nofollow\">63f1a01</a>) that should work for the general case \u2013 can you give it a try?</p>", "type": "rendered"}, "created_on": "2019-06-11T22:47:50.730693+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": null, "type": "issue_comment", "id": 52540933}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52541174.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52541174"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": "The most recent commit \\([63f1a01](#!/dedalus-project/dedalus/commits/63f1a0134c21ba345386b71778e64201adc36529)\\) fixed this bug for me, both for the simple case here and for the much-more-spaghetti-ish code where the problem originally arose. Thanks, Keaton!", "markup": "markdown", "html": "<p>The most recent commit (<a data-is-external-link=\"true\" href=\"#!/dedalus-project/dedalus/commits/63f1a0134c21ba345386b71778e64201adc36529\" rel=\"nofollow\">63f1a01</a>) fixed this bug for me, both for the simple case here and for the much-more-spaghetti-ish code where the problem originally arose. Thanks, Keaton!</p>", "type": "rendered"}, "created_on": "2019-06-11T23:34:15.024111+00:00", "user": {"display_name": "Evan Anders", "uuid": "{ce45a673-fcc9-48fc-a547-f4ee9f3a8020}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D"}, "html": {"href": "https://bitbucket.org/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:320d4568-38ec-40ab-9264-ac9b3760572a/7e7ec364-57a7-4b6a-809c-b17a66066163/128"}}, "nickname": "evanhanders", "type": "user", "account_id": "557058:320d4568-38ec-40ab-9264-ac9b3760572a"}, "updated_on": null, "type": "issue_comment", "id": 52541174}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52552098.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52552098"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": "Also fixed the problem in my case, thanks Keaton!", "markup": "markdown", "html": "<p>Also fixed the problem in my case, thanks Keaton!</p>", "type": "rendered"}, "created_on": "2019-06-12T15:20:52.275810+00:00", "user": {"display_name": "Jhett Bordwell", "uuid": "{edb9d81e-36cd-4d5d-bdcf-b73e3d2a962d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bedb9d81e-36cd-4d5d-bdcf-b73e3d2a962d%7D"}, "html": {"href": "https://bitbucket.org/%7Bedb9d81e-36cd-4d5d-bdcf-b73e3d2a962d%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:490cfe71-054b-408c-9f37-3fae874b19cc/051f0265-517a-44eb-89f3-7b2c482c6419/128"}}, "nickname": "jhbordwell", "type": "user", "account_id": "557058:490cfe71-054b-408c-9f37-3fae874b19cc"}, "updated_on": null, "type": "issue_comment", "id": 52552098}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52553772.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52553772"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": "When defining substitutions that have the square of a field quantity, as in,\r\n\r\n```\r\nproblem.substitutions['square_sub'] = '(w)**2'\r\n```\r\n\r\nIf you try to output that substitution\u2019s data in BOTH coefficient and grid space,\r\n\r\n```\r\nslices = solver.evaluator.add_file_handler('slices', sim_dt=0.25, max_writes=50)\r\ncoeffs = solver.evaluator.add_file_handler('coeffs', sim_dt=0.25, max_writes=50)\r\nslices.add_task('square_sub')\r\ncoeffs.add_task('square_sub', layout='c')\r\n```\r\n\r\nThe run fails with a \u201cValueError: gdata does not match scaled grid\\_size\u201d before any timesteps can occur. I\u2019ve attached a minorly modified rayleigh\\_benard.py file from the dedalus examples \\(my changes are lines 48 and 98-102 of the attached file\\)  that reproduces this error, and an text file containing the simulation output and full traceback.\r\n\r\nA similar bug has appeared on numerous devices within our research group, so this doesn\u2019t seem to be isolated to my computer.", "markup": "markdown", "html": "<p>When defining substitutions that have the square of a field quantity, as in,</p>\n<div class=\"codehilite\"><pre><span></span>problem.substitutions[&#39;square_sub&#39;] = &#39;(w)**2&#39;\n</pre></div>\n\n\n<p>If you try to output that substitution\u2019s data in BOTH coefficient and grid space,</p>\n<div class=\"codehilite\"><pre><span></span>slices = solver.evaluator.add_file_handler(&#39;slices&#39;, sim_dt=0.25, max_writes=50)\ncoeffs = solver.evaluator.add_file_handler(&#39;coeffs&#39;, sim_dt=0.25, max_writes=50)\nslices.add_task(&#39;square_sub&#39;)\ncoeffs.add_task(&#39;square_sub&#39;, layout=&#39;c&#39;)\n</pre></div>\n\n\n<p>The run fails with a \u201cValueError: gdata does not match scaled grid_size\u201d before any timesteps can occur. I\u2019ve attached a minorly modified rayleigh_benard.py file from the dedalus examples (my changes are lines 48 and 98-102 of the attached file)  that reproduces this error, and an text file containing the simulation output and full traceback.</p>\n<p>A similar bug has appeared on numerous devices within our research group, so this doesn\u2019t seem to be isolated to my computer.</p>", "type": "rendered"}, "created_on": "2019-06-12T17:31:02.448090+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": null, "type": "issue_comment", "id": 52553772}, {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52553774.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52553774"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-06-12T17:31:11.539714+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "updated_on": null, "type": "issue_comment", "id": 52553774}], "page": 1, "size": 6}