{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59/comments/52493963.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/59#comment-52493963"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/59.json"}}, "type": "issue", "id": 59, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "IVPs fail when output tasks include redundant substitutions"}, "content": {"raw": "A workaround for this issue \\(besides just not including those substitutions\\), seems to be introducing a check into the function decrement\\_single in distributor.py such that it doesn\u2019t attempt to transform the data if the layout of the field is already in the layout that it is attempting to transform to. This check takes the form,\n\n```python\ndef decrement_single(self, field):\n        \"\"\"Forward transform.\"\"\"\n        # Reference views from both layouts                                                                                                                                                                 \n        gdata = field.data\n        \n        # Implementing check on layout\n        if field.layout == self.layout0:                                                                                                                                      \n             return                                                                                                                                                                                        \n        else:\n             field.layout = self.layout0\n```", "markup": "markdown", "html": "<p>A workaround for this issue (besides just not including those substitutions), seems to be introducing a check into the function decrement_single in distributor.py such that it doesn\u2019t attempt to transform the data if the layout of the field is already in the layout that it is attempting to transform to. This check takes the form,</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">decrement_single</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Forward transform.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Reference views from both layouts                                                                                                                                                                 </span>\n        <span class=\"n\">gdata</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">data</span>\n\n        <span class=\"c1\"># Implementing check on layout</span>\n        <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">layout</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layout0</span><span class=\"p\">:</span>                                                                                                                                      \n             <span class=\"k\">return</span>                                                                                                                                                                                        \n        <span class=\"k\">else</span><span class=\"p\">:</span>\n             <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layout0</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-06-07T19:37:21.930153+00:00", "user": {"display_name": "Jhett Bordwell", "uuid": "{edb9d81e-36cd-4d5d-bdcf-b73e3d2a962d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bedb9d81e-36cd-4d5d-bdcf-b73e3d2a962d%7D"}, "html": {"href": "https://bitbucket.org/%7Bedb9d81e-36cd-4d5d-bdcf-b73e3d2a962d%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:490cfe71-054b-408c-9f37-3fae874b19cc/051f0265-517a-44eb-89f3-7b2c482c6419/128"}}, "nickname": "jhbordwell", "type": "user", "account_id": "557058:490cfe71-054b-408c-9f37-3fae874b19cc"}, "updated_on": null, "type": "issue_comment", "id": 52493963}