{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "links": {"attachments": {"href": "data/repositories/dedalus-project/dedalus/issues/45/attachments_page=1.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/issues/45.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/45/watch"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/issues/45/comments_page=1.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/45/future-does-not-provide-abstract-meta_"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/45/vote"}}, "reporter": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "title": "Future does not provide abstract meta_* methods", "component": null, "votes": 0, "watches": 2, "content": {"raw": "When constructing objects like operators that inherit from Future, one needs to specify all of the possible metadata types as classes. As of right now, there are no abstract methods for these. As a result, when one creates a new Operator that is also FutureField, if you do not know to add `meta_parity` (for example), you will get a very obscure error, because Dedalus will attempt to resolve `meta_parity` in `UnaryGridFunctions`. \r\n\r\nThis is very hard to track down, and would be greatly eased if `Future` provided abstract (but not implemented) methods for all possible metadata attributes on incoming fields. Then, at least one would know what to add.", "markup": "markdown", "html": "<p>When constructing objects like operators that inherit from Future, one needs to specify all of the possible metadata types as classes. As of right now, there are no abstract methods for these. As a result, when one creates a new Operator that is also FutureField, if you do not know to add <code>meta_parity</code> (for example), you will get a very obscure error, because Dedalus will attempt to resolve <code>meta_parity</code> in <code>UnaryGridFunctions</code>. </p>\n<p>This is very hard to track down, and would be greatly eased if <code>Future</code> provided abstract (but not implemented) methods for all possible metadata attributes on incoming fields. Then, at least one would know what to add.</p>", "type": "rendered"}, "assignee": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-08-31T15:33:56.555340+00:00", "milestone": null, "updated_on": "2018-08-31T21:46:07.724721+00:00", "type": "issue", "id": 45}