{"pagelen": 100, "values": [{"changes": {"state": {"new": "on hold", "old": "new"}}, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/29/changes/19372807.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/29#comment-19372807"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "Proper evaluation of duplicated subtrees"}, "created_on": "2015-06-29T18:31:14.884314+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 19372807}, {"changes": {"title": {"new": "Proper evaluation of duplicated subtrees", "old": "Parser/Substitution problem with integ()"}}, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/29/changes/19372830.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/29#comment-19372830"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "Proper evaluation of duplicated subtrees"}, "created_on": "2015-06-29T18:32:29.950431+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 19372830}, {"changes": {"content": {"new": "I've come across an interesting parser/substitution problem with the integ() operator, when applied across the whole domain.  This is for a 2-D problem, Fourier (\"x\") -- Chebyshev (\"z\").\r\n\r\nI defined two averaging types, one over planes perpendicular to the chebyshev direction, and one over the whole domain:\r\n```\r\n#!python\r\n\r\nproblem.substitutions['plane_avg(A)'] = 'integ(A, \"x\")/Lx'\r\nproblem.substitutions['vol_avg(A)']   = 'integ(A)/Lx/Lz'\r\n\r\n```\r\n\r\nand a substitiution:\r\n```\r\n#!python\r\n\r\n\r\nproblem.substitutions['enstrophy'] = '(dx(w) - u_z)**2'\r\n```\r\n\r\nAfter setting up equations, etc. I initialize slice, profile_avg and vol_avg (scalar) outputs, each in their own file:\r\n\r\n\r\n```\r\n#!python\r\n\r\nanalysis_slice = solver.evaluator.add_file_handler(data_dir+\"slices\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_slice.add_task(\"enstrophy\", name=\"enstrophy\")\r\n\r\nanalysis_profile = solver.evaluator.add_file_handler(data_dir+\"profiles\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_profile.add_task(\"plane_avg(enstrophy)\", name=\"enstrophy\")\r\n\r\nanalysis_scalar = solver.evaluator.add_file_handler(data_dir+\"scalar\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_scalar.add_task(\"vol_avg(enstrophy)\", name=\"enstrophy\")\r\n```\r\n\r\n\r\nThat code fails with the following grid-data error:\r\n\r\n```\r\n#!python\r\n\r\n\r\nTraceback (most recent call last):\r\nFile \"FC_fixed_kappa_1e6.py\", line 111, in <module>\r\nsolver.step(dt)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/solvers.py\", line 339, in step\r\nself.timestepper.step(self, dt, wall_time)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/timesteppers.py\", line 528, in step\r\nevaluator.evaluate_scheduled(wall_time, solver.sim_time, iteration)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/evaluator.py\", line 97, in evaluate_scheduled\r\nself.evaluate_handlers(scheduled_handlers, wall_time, sim_time, iteration)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/evaluator.py\", line 127, in evaluate_handlers\r\nself.domain.dist.paths[next_index].decrement(fields)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/distributor.py\", line 343, in decrement\r\nself.decrement_single(field)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/distributor.py\", line 323, in decrement_single\r\nself.basis.forward(gdata, cdata, self.axis, field.meta[self.axis])\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/basis.py\", line 717, in _forward_fftw\r\ncdata, gdata = self.check_arrays(cdata, gdata, axis)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/basis.py\", line 148, in check_arrays\r\nraise ValueError(\"gdata does not match grid_dtype\")\r\nValueError: gdata does not match grid_dtype\r\n```\r\n\r\n\r\nChanging only the very last line of the analysis code block:\r\n```\r\n#!python\r\n\r\nanalysis_scalar.add_task(\"vol_avg(enstrophy)\", name=\"enstrophy\")\r\n```\r\nto do the substitution manually:\r\n```\r\n#!python\r\n\r\nanalysis_scalar.add_task(\"vol_avg((dx(w) - u_z)**2)\", name=\"enstrophy\")\r\n```\r\ncauses the code to run fine and trigger no such error.\r\n\r\n\r\nThis seems like some form of substitution/parser bug.  Any ideas?", "old": "I've come across an interesting parser/substitution problem with the integ() operator, when applied across the whole domain.  This is for a 2-D problem, Fourier (\"x\") -- Chebyshev (\"z\").\r\n\r\nI defined two averaging types, one over planes perpendicular to the chebyshev direction, and one over the whole domain:\r\n```\r\n#!python\r\n\r\nproblem.substitutions['plane_avg(A)'] = 'integ(A, \"x\")/Lx'\r\nproblem.substitutions['vol_avg(A)']   = 'integ(A)/Lx/Lz'\r\n\r\n```\r\n\r\nand a substitiution:\r\n```\r\n#!python\r\n\r\n\r\nproblem.substitutions['enstrophy'] = '(dx(w) - u_z)**2'\r\n```\r\n\r\nAfter setting up equations, etc. I initialize slice, profile_avg and vol_avg (scalar) outputs, each in their own file:\r\n\r\n\r\n```\r\n#!python\r\n\r\nanalysis_slice = solver.evaluator.add_file_handler(data_dir+\"slices\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_slice.add_task(\"enstrophy\", name=\"enstrophy\")\r\n\r\nanalysis_profile = solver.evaluator.add_file_handler(data_dir+\"profiles\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_profile.add_task(\"plane_avg(enstrophy)\", name=\"enstrophy\")\r\n\r\nanalysis_scalar = solver.evaluator.add_file_handler(data_dir+\"scalar\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_scalar.add_task(\"vol_avg(enstrophy)\", name=\"enstrophy\")\r\n```\r\n\r\n\r\nThat code fails with the following grid-data error:\r\n\r\n```\r\n#!python\r\n\r\n\r\nTraceback (most recent call last):\r\nFile \"FC_fixed_kappa_1e6.py\", line 111, in <module>\r\nsolver.step(dt)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/solvers.py\", line 339, in step\r\nself.timestepper.step(self, dt, wall_time)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/timesteppers.py\", line 528, in step\r\nevaluator.evaluate_scheduled(wall_time, solver.sim_time, iteration)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/evaluator.py\", line 97, in evaluate_scheduled\r\nself.evaluate_handlers(scheduled_handlers, wall_time, sim_time, iteration)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/evaluator.py\", line 127, in evaluate_handlers\r\nself.domain.dist.paths[next_index].decrement(fields)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/distributor.py\", line 343, in decrement\r\nself.decrement_single(field)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/distributor.py\", line 323, in decrement_single\r\nself.basis.forward(gdata, cdata, self.axis, field.meta[self.axis])\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/basis.py\", line 717, in _forward_fftw\r\ncdata, gdata = self.check_arrays(cdata, gdata, axis)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/basis.py\", line 148, in check_arrays\r\nraise ValueError(\"gdata does not match grid_dtype\")\r\nValueError: gdata does not match grid_dtype\r\n```\r\n\r\n\r\nChanging only the very last line of the analysis code block:\r\n```\r\n#!python\r\n\r\nanalysis_scalar.add_task(\"vol_avg(enstrophy)\", name=\"enstrophy\")\r\n```\r\nto do the substitution manually:\r\n```\r\n#!python\r\n\r\nanalysis_scalar.add_task(\"vol_avg((dx(w) - u_z)**2)\", name=\"enstrophy\")\r\n```\r\ncauses the code to run fine and trigger no such error.\r\n\r\n\r\nThis seems like some form of substitution/parser bug.  Any ideas?\r\n\r\n\r\n"}, "state": {"new": "resolved", "old": "on hold"}}, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/29/changes/48650936.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/29#comment-48650936"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "Proper evaluation of duplicated subtrees"}, "created_on": "2018-10-30T21:07:57.040309+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 48650936}], "page": 1, "size": 3}