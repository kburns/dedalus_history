{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/64/comments/52951450.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/64#comment-52951450"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "NCCs cause strange MPI crashes after commit 4232435 in 3D domains with distributed processor meshes"}, "content": {"raw": "So I couldn\u2019t get the openmpi version to match exactly without more effort \\(I\u2019m on 2.1.1 instead of 2.1.6\\), and I don\u2019t think I\u2019m going to get to work on this much more tonight.  But I do know that this bug has come up on at least 3 different stacks, and here\u2019s something else that might be related:\n\nFor the problem above, if I put on debug output, the NCC expansion output is VASTLY different between versions 1150 and 1151. If I hg up 1150 and run mpirun -n 4 python3 mesh\\_rayleigh\\_benard.py, here\u2019s how the NCC expansion is reported:\n\n> \u2026\n>\n> 2019-07-11 18:49:57,001 solvers 0/4 DEBUG :: Beginning IVP instantiation  \n> 2019-07-11 18:49:57,021 transposes 0/4 DEBUG :: Building FFTW transpose plan for \\(dtype, gshape, axis\\) = \\(complex128, \\[ 8 16  8\\], 0\\)  \n> 2019-07-11 18:49:57,028 transposes 0/4 DEBUG :: Building FFTW transpose plan for \\(dtype, gshape, axis\\) = \\(complex128, \\[ 4 15 16\\], 1\\)  \n> 2019-07-11 18:49:57,032 basis 0/4 DEBUG :: Building FFTW DCT plan for \\(dtype, gshape, axis\\) = \\(complex128, \\(4, 8, 16\\), 2\\)  \n> 2019-07-11 18:49:57,035 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,037 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc\\*\\(-1_P\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,038 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_P\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,041 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_P\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,045 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,047 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,049 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,051 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,053 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,056 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,059 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,062 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,064 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_\\(-1_R\\)' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,067 field 0/4 DEBUG :: Expanded NCC 'this\\_ncc_-1' to mode 0 with 1 terms.  \n> 2019-07-11 18:49:57,172 pencil 0/4 INFO :: Building pencil matrix 1/32 \\(~3%\\) Elapsed: 0s, Remaining: 3s, Rate: 1.0e\\+01/s  \n> 2019-07-11 18:49:57,531 pencil 0/4 INFO :: Building pencil matrix 4/32 \\(~12%\\) Elapsed: 0s, Remaining: 3s, Rate: 8.8e\\+00/s\n\n\u2026and so on, the pencils build and it goes, and the problem successfully timesteps. But if I run the same command line after doing hg up 1151, the run fails and it seems to expand the NCCs for each pencil? I\u2019ve attached the debug output for that \\(see \u2018much\\_expansion\\_sadness.txt\u2019, attached to original bug report now\\). Jhett and I have been wondering if this was an intentional change to how NCC expansion was reported, but I\u2019m thinking it wasn\u2019t, especially since it starts showing up at the commit where we start having problems with NCCs.  Was that intentional? Any idea why it\u2019s spitting out so much NCC expansion nonsense?", "markup": "markdown", "html": "<p>So I couldn\u2019t get the openmpi version to match exactly without more effort (I\u2019m on 2.1.1 instead of 2.1.6), and I don\u2019t think I\u2019m going to get to work on this much more tonight.  But I do know that this bug has come up on at least 3 different stacks, and here\u2019s something else that might be related:</p>\n<p>For the problem above, if I put on debug output, the NCC expansion output is VASTLY different between versions 1150 and 1151. If I hg up 1150 and run mpirun -n 4 python3 mesh_rayleigh_benard.py, here\u2019s how the NCC expansion is reported:</p>\n<blockquote>\n<p>\u2026</p>\n<p>2019-07-11 18:49:57,001 solvers 0/4 DEBUG :: Beginning IVP instantiation<br />\n2019-07-11 18:49:57,021 transposes 0/4 DEBUG :: Building FFTW transpose plan for (dtype, gshape, axis) = (complex128, [ 8 16  8], 0)<br />\n2019-07-11 18:49:57,028 transposes 0/4 DEBUG :: Building FFTW transpose plan for (dtype, gshape, axis) = (complex128, [ 4 15 16], 1)<br />\n2019-07-11 18:49:57,032 basis 0/4 DEBUG :: Building FFTW DCT plan for (dtype, gshape, axis) = (complex128, (4, 8, 16), 2)<br />\n2019-07-11 18:49:57,035 field 0/4 DEBUG :: Expanded NCC 'this_ncc' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,037 field 0/4 DEBUG :: Expanded NCC 'this_ncc*(-1_P)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,038 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_P)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,041 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_P)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,045 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,047 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,049 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,051 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,053 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,056 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,059 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,062 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,064 field 0/4 DEBUG :: Expanded NCC 'this_ncc_(-1_R)' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,067 field 0/4 DEBUG :: Expanded NCC 'this_ncc_-1' to mode 0 with 1 terms.<br />\n2019-07-11 18:49:57,172 pencil 0/4 INFO :: Building pencil matrix 1/32 (~3%) Elapsed: 0s, Remaining: 3s, Rate: 1.0e+01/s<br />\n2019-07-11 18:49:57,531 pencil 0/4 INFO :: Building pencil matrix 4/32 (~12%) Elapsed: 0s, Remaining: 3s, Rate: 8.8e+00/s</p>\n</blockquote>\n<p>\u2026and so on, the pencils build and it goes, and the problem successfully timesteps. But if I run the same command line after doing hg up 1151, the run fails and it seems to expand the NCCs for each pencil? I\u2019ve attached the debug output for that (see \u2018much_expansion_sadness.txt\u2019, attached to original bug report now). Jhett and I have been wondering if this was an intentional change to how NCC expansion was reported, but I\u2019m thinking it wasn\u2019t, especially since it starts showing up at the commit where we start having problems with NCCs.  Was that intentional? Any idea why it\u2019s spitting out so much NCC expansion nonsense?</p>", "type": "rendered"}, "created_on": "2019-07-12T00:55:01.903679+00:00", "user": {"display_name": "Evan Anders", "uuid": "{ce45a673-fcc9-48fc-a547-f4ee9f3a8020}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D"}, "html": {"href": "https://bitbucket.org/%7Bce45a673-fcc9-48fc-a547-f4ee9f3a8020%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:320d4568-38ec-40ab-9264-ac9b3760572a/7e7ec364-57a7-4b6a-809c-b17a66066163/128"}}, "nickname": "evanhanders", "type": "user", "account_id": "557058:320d4568-38ec-40ab-9264-ac9b3760572a"}, "updated_on": null, "type": "issue_comment", "id": 52951450}