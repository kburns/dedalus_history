{"changes": {"state": {"new": "resolved", "old": "new"}}, "links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/3/changes/8507161.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/3#comment-8507161"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "hack sparse structure for system"}, "created_on": "2014-02-21T02:25:14.321063+00:00", "user": {"display_name": "Keaton Burns", "uuid": "{3d3e64f1-bf12-45df-b655-4543d8fb34c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D"}, "html": {"href": "https://bitbucket.org/%7B3d3e64f1-bf12-45df-b655-4543d8fb34c4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e31a7835-5317-4dfa-8551-f32a06f40279/40f33f99-2b75-4a17-a8c2-07c8d74c7480/128"}}, "nickname": "kburns", "type": "user", "account_id": "557058:e31a7835-5317-4dfa-8551-f32a06f40279"}, "message": {"raw": "I think the thrust of this was largely addressed in dfef3d2, which separates systems with fields that need to be transformed from i.e. those that are just used to store previous data for multistep integrators.  This essentially minimizes unnecessary memory allocation.  \n\nSo we fully allocate the necessary systems at the solver instantation, but in general they should all be fully utilized within a few time steps.", "markup": "markdown", "html": "<p>I think the thrust of this was largely addressed in <a href=\"#!/dedalus-project/dedalus/commits/dfef3d2\" rel=\"nofollow\" class=\"ap-connect-link\">dfef3d2</a>, which separates systems with fields that need to be transformed from i.e. those that are just used to store previous data for multistep integrators.  This essentially minimizes unnecessary memory allocation.  </p>\n<p>So we fully allocate the necessary systems at the solver instantation, but in general they should all be fully utilized within a few time steps.</p>", "type": "rendered"}, "type": "issue_change", "id": 8507161}