{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "links": {"attachments": {"href": "data/repositories/dedalus-project/dedalus/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/29/watch"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/issues/29/comments_page=1.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/29/proper-evaluation-of-duplicated-subtrees"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/29/vote"}}, "reporter": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "title": "Proper evaluation of duplicated subtrees", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I've come across an interesting parser/substitution problem with the integ() operator, when applied across the whole domain.  This is for a 2-D problem, Fourier (\"x\") -- Chebyshev (\"z\").\r\n\r\nI defined two averaging types, one over planes perpendicular to the chebyshev direction, and one over the whole domain:\r\n```\r\n#!python\r\n\r\nproblem.substitutions['plane_avg(A)'] = 'integ(A, \"x\")/Lx'\r\nproblem.substitutions['vol_avg(A)']   = 'integ(A)/Lx/Lz'\r\n\r\n```\r\n\r\nand a substitiution:\r\n```\r\n#!python\r\n\r\n\r\nproblem.substitutions['enstrophy'] = '(dx(w) - u_z)**2'\r\n```\r\n\r\nAfter setting up equations, etc. I initialize slice, profile_avg and vol_avg (scalar) outputs, each in their own file:\r\n\r\n\r\n```\r\n#!python\r\n\r\nanalysis_slice = solver.evaluator.add_file_handler(data_dir+\"slices\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_slice.add_task(\"enstrophy\", name=\"enstrophy\")\r\n\r\nanalysis_profile = solver.evaluator.add_file_handler(data_dir+\"profiles\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_profile.add_task(\"plane_avg(enstrophy)\", name=\"enstrophy\")\r\n\r\nanalysis_scalar = solver.evaluator.add_file_handler(data_dir+\"scalar\", max_writes=20, parallel=False, **kwargs)\r\nanalysis_scalar.add_task(\"vol_avg(enstrophy)\", name=\"enstrophy\")\r\n```\r\n\r\n\r\nThat code fails with the following grid-data error:\r\n\r\n```\r\n#!python\r\n\r\n\r\nTraceback (most recent call last):\r\nFile \"FC_fixed_kappa_1e6.py\", line 111, in <module>\r\nsolver.step(dt)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/solvers.py\", line 339, in step\r\nself.timestepper.step(self, dt, wall_time)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/timesteppers.py\", line 528, in step\r\nevaluator.evaluate_scheduled(wall_time, solver.sim_time, iteration)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/evaluator.py\", line 97, in evaluate_scheduled\r\nself.evaluate_handlers(scheduled_handlers, wall_time, sim_time, iteration)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/evaluator.py\", line 127, in evaluate_handlers\r\nself.domain.dist.paths[next_index].decrement(fields)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/distributor.py\", line 343, in decrement\r\nself.decrement_single(field)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/distributor.py\", line 323, in decrement_single\r\nself.basis.forward(gdata, cdata, self.axis, field.meta[self.axis])\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/basis.py\", line 717, in _forward_fftw\r\ncdata, gdata = self.check_arrays(cdata, gdata, axis)\r\nFile \"/u/bpbrown/build/dedalus/dedalus/core/basis.py\", line 148, in check_arrays\r\nraise ValueError(\"gdata does not match grid_dtype\")\r\nValueError: gdata does not match grid_dtype\r\n```\r\n\r\n\r\nChanging only the very last line of the analysis code block:\r\n```\r\n#!python\r\n\r\nanalysis_scalar.add_task(\"vol_avg(enstrophy)\", name=\"enstrophy\")\r\n```\r\nto do the substitution manually:\r\n```\r\n#!python\r\n\r\nanalysis_scalar.add_task(\"vol_avg((dx(w) - u_z)**2)\", name=\"enstrophy\")\r\n```\r\ncauses the code to run fine and trigger no such error.\r\n\r\n\r\nThis seems like some form of substitution/parser bug.  Any ideas?", "markup": "markdown", "html": "<p>I've come across an interesting parser/substitution problem with the integ() operator, when applied across the whole domain.  This is for a 2-D problem, Fourier (\"x\") -- Chebyshev (\"z\").</p>\n<p>I defined two averaging types, one over planes perpendicular to the chebyshev direction, and one over the whole domain:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">substitutions</span><span class=\"p\">[</span><span class=\"s1\">&#39;plane_avg(A)&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;integ(A, &quot;x&quot;)/Lx&#39;</span>\n<span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">substitutions</span><span class=\"p\">[</span><span class=\"s1\">&#39;vol_avg(A)&#39;</span><span class=\"p\">]</span>   <span class=\"o\">=</span> <span class=\"s1\">&#39;integ(A)/Lx/Lz&#39;</span>\n</pre></div>\n\n\n<p>and a substitiution:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">substitutions</span><span class=\"p\">[</span><span class=\"s1\">&#39;enstrophy&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;(dx(w) - u_z)**2&#39;</span>\n</pre></div>\n\n\n<p>After setting up equations, etc. I initialize slice, profile_avg and vol_avg (scalar) outputs, each in their own file:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">analysis_slice</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">evaluator</span><span class=\"o\">.</span><span class=\"n\">add_file_handler</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"o\">+</span><span class=\"s2\">&quot;slices&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_writes</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">parallel</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">analysis_slice</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;enstrophy&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;enstrophy&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">analysis_profile</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">evaluator</span><span class=\"o\">.</span><span class=\"n\">add_file_handler</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"o\">+</span><span class=\"s2\">&quot;profiles&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_writes</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">parallel</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">analysis_profile</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;plane_avg(enstrophy)&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;enstrophy&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">analysis_scalar</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">evaluator</span><span class=\"o\">.</span><span class=\"n\">add_file_handler</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"o\">+</span><span class=\"s2\">&quot;scalar&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_writes</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">parallel</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">analysis_scalar</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;vol_avg(enstrophy)&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;enstrophy&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>That code fails with the following grid-data error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;FC_fixed_kappa_1e6.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">111</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n<span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/solvers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">339</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">step</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">timestepper</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">wall_time</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/timesteppers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">528</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">step</span>\n<span class=\"n\">evaluator</span><span class=\"o\">.</span><span class=\"n\">evaluate_scheduled</span><span class=\"p\">(</span><span class=\"n\">wall_time</span><span class=\"p\">,</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">sim_time</span><span class=\"p\">,</span> <span class=\"n\">iteration</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/evaluator.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">97</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">evaluate_scheduled</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">evaluate_handlers</span><span class=\"p\">(</span><span class=\"n\">scheduled_handlers</span><span class=\"p\">,</span> <span class=\"n\">wall_time</span><span class=\"p\">,</span> <span class=\"n\">sim_time</span><span class=\"p\">,</span> <span class=\"n\">iteration</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/evaluator.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">127</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">evaluate_handlers</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"p\">[</span><span class=\"n\">next_index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">decrement</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/distributor.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">343</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">decrement</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decrement_single</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/distributor.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">323</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">decrement_single</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">basis</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">(</span><span class=\"n\">gdata</span><span class=\"p\">,</span> <span class=\"n\">cdata</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">])</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/basis.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">717</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_forward_fftw</span>\n<span class=\"n\">cdata</span><span class=\"p\">,</span> <span class=\"n\">gdata</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_arrays</span><span class=\"p\">(</span><span class=\"n\">cdata</span><span class=\"p\">,</span> <span class=\"n\">gdata</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;/u/bpbrown/build/dedalus/dedalus/core/basis.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">148</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">check_arrays</span>\n<span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;gdata does not match grid_dtype&quot;</span><span class=\"p\">)</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">gdata</span> <span class=\"n\">does</span> <span class=\"ow\">not</span> <span class=\"n\">match</span> <span class=\"n\">grid_dtype</span>\n</pre></div>\n\n\n<p>Changing only the very last line of the analysis code block:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">analysis_scalar</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;vol_avg(enstrophy)&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;enstrophy&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>to do the substitution manually:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">analysis_scalar</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;vol_avg((dx(w) - u_z)**2)&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;enstrophy&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>causes the code to run fine and trigger no such error.</p>\n<p>This seems like some form of substitution/parser bug.  Any ideas?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-06-25T04:30:56.605254+00:00", "milestone": null, "updated_on": "2018-10-30T21:07:57.014588+00:00", "type": "issue", "id": 29}