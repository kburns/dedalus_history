{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "links": {"attachments": {"href": "data/repositories/dedalus-project/dedalus/issues/57/attachments_page=1.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/issues/57.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/57/watch"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/issues/57/comments_page=1.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/57/add-a-method-to-get-all-element-grids-at"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/57/vote"}}, "reporter": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "title": "Add a method to get all element grids at once", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, a domain has \r\n\r\n```python\r\ndomain.grid(axis)\r\n```\r\n\r\nto get the grid in one dimension specified by `axis` and\r\n\r\n```python\r\ndomain.grids()\r\n```\r\n\r\nto get all N grids.\r\n\r\nHowever, for the `elements` which give the mode numbers, there is only \r\n\r\n \r\n\r\n```python\r\ndomain.elements(axis)\r\n```\r\n\r\nwhich takes `axis` and returns one dimension\u2019s mode numbers. **We should add a convenience method that gives the mode numbers in all dimensions.**", "markup": "markdown", "html": "<p>Currently, a domain has </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>to get the grid in one dimension specified by <code>axis</code> and</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">grids</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>to get all N grids.</p>\n<p>However, for the <code>elements</code> which give the mode numbers, there is only </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">domain</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>which takes <code>axis</code> and returns one dimension\u2019s mode numbers. <strong>We should add a convenience method that gives the mode numbers in all dimensions.</strong></p>", "type": "rendered"}, "assignee": {"display_name": "J. S. Oishi", "uuid": "{ab7c2db2-7642-47a8-9264-0939f601d904}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D"}, "html": {"href": "https://bitbucket.org/%7Bab7c2db2-7642-47a8-9264-0939f601d904%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:94f96ca9-adbd-4972-8f41-b00b9683f819/4a90742a-28a5-4829-a074-c23c9f5fcc81/128"}}, "nickname": "jsoishi", "type": "user", "account_id": "557058:94f96ca9-adbd-4972-8f41-b00b9683f819"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-03T15:43:29.840819+00:00", "milestone": null, "updated_on": "2020-03-19T18:49:49.751278+00:00", "type": "issue", "id": 57}