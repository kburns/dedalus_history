{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "links": {"attachments": {"href": "data/repositories/dedalus-project/dedalus/issues/36/attachments_page=1.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/issues/36.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/36/watch"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/issues/36/comments_page=1.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/36/100-cpu-usage-when-dedalus-is-imported"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/36/vote"}}, "reporter": {"display_name": "Josh Burkart", "uuid": "{56fc9204-13a0-4da3-9382-3361a3478ddd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B56fc9204-13a0-4da3-9382-3361a3478ddd%7D"}, "html": {"href": "https://bitbucket.org/%7B56fc9204-13a0-4da3-9382-3361a3478ddd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/804f5670e115a7c43d3218a75d005146d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-0.png"}}, "nickname": "joshburkart", "type": "user", "account_id": "5aa190a6662ca62622f242d7"}, "title": "100% CPU usage when dedalus is imported into an interactive shell", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi guys! Dedalus is a really great package; I've been playing around with it for some side projects.\r\n\r\nOne issue I've encountered is that if I load dedalus into an interactive shell (Python, IPython, or IPython notebook), even if I'm not doing anything with it I notice the associated python executable using 100% of one CPU. E.g.:\r\n```\r\n$ ipython\r\nIn [1]: import dedalus.public\r\n\r\n# In another terminal window...\r\n$ top\r\n...\r\n96028  python       99.6  00:22.26 4/1   0    27    59M    0B     0B     96027 96027 running\r\n...\r\n```\r\nI'm on Mac OSX El Capitan with Anaconda Python 3.5. Can anyone else reproduce this? Thanks!", "markup": "markdown", "html": "<p>Hi guys! Dedalus is a really great package; I've been playing around with it for some side projects.</p>\n<p>One issue I've encountered is that if I load dedalus into an interactive shell (Python, IPython, or IPython notebook), even if I'm not doing anything with it I notice the associated python executable using 100% of one CPU. E.g.:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">$</span> <span class=\"n\">ipython</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">dedalus.public</span>\n\n<span class=\"c1\"># In another terminal window...</span>\n<span class=\"err\">$</span> <span class=\"n\">top</span>\n<span class=\"o\">...</span>\n<span class=\"mi\">96028</span>  <span class=\"n\">python</span>       <span class=\"mf\">99.6</span>  <span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mf\">22.26</span> <span class=\"mi\">4</span><span class=\"o\">/</span><span class=\"mi\">1</span>   <span class=\"mi\">0</span>    <span class=\"mi\">27</span>    <span class=\"mi\">59</span><span class=\"n\">M</span>    <span class=\"mi\">0</span><span class=\"n\">B</span>     <span class=\"mi\">0</span><span class=\"n\">B</span>     <span class=\"mi\">96027</span> <span class=\"mi\">96027</span> <span class=\"n\">running</span>\n<span class=\"o\">...</span>\n</pre></div>\n\n\n<p>I'm on Mac OSX El Capitan with Anaconda Python 3.5. Can anyone else reproduce this? Thanks!</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-02-08T05:54:47.210047+00:00", "milestone": null, "updated_on": "2016-04-27T03:33:32.433717+00:00", "type": "issue", "id": 36}