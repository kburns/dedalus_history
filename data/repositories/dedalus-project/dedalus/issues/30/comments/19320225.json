{"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/30/comments/19320225.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/30#comment-19320225"}}, "issue": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus/issues/30.json"}}, "type": "issue", "id": 30, "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "title": "EVP should be able to automatically set RHS to zero"}, "content": {"raw": "Keaton,\n      That looks fantastic.  Thank you for taking care of that so quickly and thoroughly.\n\n\nAs a note in case anyone tries using this directly, to do the \"-1j*omega*A\" substitution, the user should also change the grid_dtype to be of complex type (using np.complex128 rather than e.g., np.float64) when setting up domain.  Ryan Orvedahl came across this, and it was a bit subtle to debug.\n\nHere is an example for 2-D:\n\n\n```\n#!python\n\nfrom dedalus import public as de\n\n<...>\n\nx_basis = de.Fourier(  'x', nx, interval=[0., Lx], dealias=3/2)\nz_basis = de.Chebyshev('z', nz, interval=[0., Lz], dealias=3/2)\ndomain = de.Domain([x_basis, z_basis], grid_dtype=np.float64)\nproblem = de.IVP(domain, variables=['p','b','u','w','bz','uz','wz'])\n\n<...>\n```\n\n\ntransforms into:\n\n\n\n```\n#!python\n\nfrom dedalus import public as de\n\n<...>\n\nx_basis = de.Fourier(  'x', nx, interval=[0., Lx], dealias=3/2)\nz_basis = de.Chebyshev('z', nz, interval=[0., Lz], dealias=3/2)\ndomain = de.Domain([x_basis, z_basis], grid_dtype=np.complex128)\nproblem = de.EVP(domain, variables=['p','b','u','w','bz','uz','wz'], eigenvalue='omega')\nproblem.substitutions['dt(A)'] = \"-1j*omega*A\"\n\n<...>\n```\n\n", "markup": "markdown", "html": "<p>Keaton,\n      That looks fantastic.  Thank you for taking care of that so quickly and thoroughly.</p>\n<p>As a note in case anyone tries using this directly, to do the \"-1j<em>omega</em>A\" substitution, the user should also change the grid_dtype to be of complex type (using np.complex128 rather than e.g., np.float64) when setting up domain.  Ryan Orvedahl came across this, and it was a bit subtle to debug.</p>\n<p>Here is an example for 2-D:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dedalus</span> <span class=\"kn\">import</span> <span class=\"n\">public</span> <span class=\"k\">as</span> <span class=\"n\">de</span>\n\n<span class=\"o\">&lt;...&gt;</span>\n\n<span class=\"n\">x_basis</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">Fourier</span><span class=\"p\">(</span>  <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">nx</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"n\">Lx</span><span class=\"p\">],</span> <span class=\"n\">dealias</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">z_basis</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">Chebyshev</span><span class=\"p\">(</span><span class=\"s1\">&#39;z&#39;</span><span class=\"p\">,</span> <span class=\"n\">nz</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"n\">Lz</span><span class=\"p\">],</span> <span class=\"n\">dealias</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">Domain</span><span class=\"p\">([</span><span class=\"n\">x_basis</span><span class=\"p\">,</span> <span class=\"n\">z_basis</span><span class=\"p\">],</span> <span class=\"n\">grid_dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span>\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">IVP</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;p&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;u&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;w&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;bz&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;uz&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;wz&#39;</span><span class=\"p\">])</span>\n\n<span class=\"o\">&lt;...&gt;</span>\n</pre></div>\n\n\n<p>transforms into:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dedalus</span> <span class=\"kn\">import</span> <span class=\"n\">public</span> <span class=\"k\">as</span> <span class=\"n\">de</span>\n\n<span class=\"o\">&lt;...&gt;</span>\n\n<span class=\"n\">x_basis</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">Fourier</span><span class=\"p\">(</span>  <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"n\">nx</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"n\">Lx</span><span class=\"p\">],</span> <span class=\"n\">dealias</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">z_basis</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">Chebyshev</span><span class=\"p\">(</span><span class=\"s1\">&#39;z&#39;</span><span class=\"p\">,</span> <span class=\"n\">nz</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"n\">Lz</span><span class=\"p\">],</span> <span class=\"n\">dealias</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">Domain</span><span class=\"p\">([</span><span class=\"n\">x_basis</span><span class=\"p\">,</span> <span class=\"n\">z_basis</span><span class=\"p\">],</span> <span class=\"n\">grid_dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">complex128</span><span class=\"p\">)</span>\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">de</span><span class=\"o\">.</span><span class=\"n\">EVP</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;p&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;u&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;w&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;bz&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;uz&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;wz&#39;</span><span class=\"p\">],</span> <span class=\"n\">eigenvalue</span><span class=\"o\">=</span><span class=\"s1\">&#39;omega&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">substitutions</span><span class=\"p\">[</span><span class=\"s1\">&#39;dt(A)&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-1j*omega*A&quot;</span>\n\n<span class=\"o\">&lt;...&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-06-26T18:10:31.861845+00:00", "user": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "updated_on": null, "type": "issue_comment", "id": 19320225}