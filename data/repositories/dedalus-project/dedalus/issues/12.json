{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/dedalus-project/dedalus.json"}, "html": {"href": "#!/dedalus-project/dedalus"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dc39ab6-2798-450d-af2f-e976f94b5794}ts=2009435"}}, "type": "repository", "name": "dedalus", "full_name": "dedalus-project/dedalus", "uuid": "{1dc39ab6-2798-450d-af2f-e976f94b5794}"}, "links": {"attachments": {"href": "data/repositories/dedalus-project/dedalus/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/dedalus-project/dedalus/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/12/watch"}, "comments": {"href": "data/repositories/dedalus-project/dedalus/issues/12/comments_page=1.json"}, "html": {"href": "#!/dedalus-project/dedalus/issues/12/time-step-stability-tests-advection"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/dedalus-project/dedalus/issues/12/vote"}}, "reporter": {"display_name": "Benjamin Brown", "uuid": "{7ccecdb3-3639-4001-8249-060e80320bda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D"}, "html": {"href": "https://bitbucket.org/%7B7ccecdb3-3639-4001-8249-060e80320bda%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571/8bc6f4da-871a-48b1-88ea-998663d18142/128"}}, "nickname": "Benjamin Brown", "type": "user", "account_id": "557058:0696c4b9-e94c-41ac-82be-62ad4f0ec571"}, "title": "Time-step stability tests (advection-diffusion first)", "component": null, "votes": 1, "watches": 3, "content": {"raw": "Dedalus needs a time-step stability test suite.\r\n\r\nWe need an automated testing suite that can map out the stability domain for our different time-stepping algorithms.  In particular, we should be able to create stability region maps like in Ascher et al. 1995 and Canuto et al. Appendix D, Figures D1 & D2.\r\n\r\nIn Dedalus, we can do this by solving a given linear equation set on a grid of variables, testing whether the amplitude (maybe integrated over the domain; L2 norm?) grows between successive timesteps.  \r\n\r\nMost previous work has been done semi-analytically and only addresses 2nd order finite difference or fourier spectra.  An advantage over work done previously is that we can numerically map out this stability domain for chebyshev and legendre grids, where some of the answers are not well known and hueristic rules are generally applied.\r\n\r\nWe can also map this domain out for different equation sets.  We should start with the simple 1-D advection-diffusion test, with\r\n```\r\n       \\partial_t Y = - c \\partial_x Y + \\lambda \\partial_{xx} Y\r\n```\r\nand constant advection speed `c` and diffusion coefficient `lambda`, but we could eventually test the thermal mode equation, etc.\r\n\r\nThis is straightforward to do for linear equation sets.  Testing non-linear timestepping is more challenging, but we might look at Burgers equation (as in Ascher et al. 1995).\r\n\r\n\r\nI can't assign this to me right now, but I'll take this on, as I need to understand why the CNAB3 timestepper is going unstable for an entropy-diffusion test.\r\n\r\n--Ben", "markup": "markdown", "html": "<p>Dedalus needs a time-step stability test suite.</p>\n<p>We need an automated testing suite that can map out the stability domain for our different time-stepping algorithms.  In particular, we should be able to create stability region maps like in Ascher et al. 1995 and Canuto et al. Appendix D, Figures D1 &amp; D2.</p>\n<p>In Dedalus, we can do this by solving a given linear equation set on a grid of variables, testing whether the amplitude (maybe integrated over the domain; L2 norm?) grows between successive timesteps.  </p>\n<p>Most previous work has been done semi-analytically and only addresses 2nd order finite difference or fourier spectra.  An advantage over work done previously is that we can numerically map out this stability domain for chebyshev and legendre grids, where some of the answers are not well known and hueristic rules are generally applied.</p>\n<p>We can also map this domain out for different equation sets.  We should start with the simple 1-D advection-diffusion test, with</p>\n<div class=\"codehilite\"><pre><span></span>       \\partial_t Y = - c \\partial_x Y + \\lambda \\partial_{xx} Y\n</pre></div>\n\n\n<p>and constant advection speed <code>c</code> and diffusion coefficient <code>lambda</code>, but we could eventually test the thermal mode equation, etc.</p>\n<p>This is straightforward to do for linear equation sets.  Testing non-linear timestepping is more challenging, but we might look at Burgers equation (as in Ascher et al. 1995).</p>\n<p>I can't assign this to me right now, but I'll take this on, as I need to understand why the CNAB3 timestepper is going unstable for an entropy-diffusion test.</p>\n<p>--Ben</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2013-09-16T16:09:37.443666+00:00", "milestone": null, "updated_on": "2013-10-08T16:49:01.603130+00:00", "type": "issue", "id": 12}